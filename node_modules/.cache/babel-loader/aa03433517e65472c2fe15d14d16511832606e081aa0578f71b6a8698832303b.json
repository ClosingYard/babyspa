{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import Calendar from'react-calendar';// Make sure this package is installed\nimport'./Styling/dashboardStyle.css';// Adjust the path to your custom CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=_ref=>{let{user}=_ref;// State variables\nconst[date,setDate]=useState(new Date());const[availableTimes,setAvailableTimes]=useState([]);const[selectedTime,setSelectedTime]=useState('');const[service,setService]=useState('');const[userName,setUserName]=useState('');const[userEmail,setUserEmail]=useState('');const[userPhone,setUserPhone]=useState('');const[bookingId,setBookingId]=useState(null);// Fetch available times whenever the date changes\nuseEffect(()=>{const fetchAvailableTimes=async()=>{try{const res=await axios.get('http://192.168.1.96:5000/api/get-times',{params:{date:date.toDateString()}});setAvailableTimes(res.data.times||[]);}catch(error){console.error('Error fetching available times:',error);}};fetchAvailableTimes();},[date]);const handleBooking=async()=>{if(!selectedTime||!service||!userName||!userEmail||!userPhone){alert('Please fill in all fields before booking.');return;}try{const response=await axios.post('http://192.168.1.96:5000/api/book-time',{date:date.toDateString(),time:selectedTime,service,user:{name:userName,email:userEmail,phone:userPhone}});if(response.status===200){setBookingId(response.data.bookingId);// Save the booking ID\nalert('Booking successful');setSelectedTime('');setService('');setUserName('');setUserEmail('');setUserPhone('');}else{alert('Failed to book time. Please try again.');}}catch(error){console.error('Error making booking:',error.response||error.message);alert('Error making booking. Please try again later.');}};const handleDeleteBooking=async()=>{if(!bookingId){alert('No booking ID available.');return;}try{const response=await axios.delete(`http://localhost:5000/api/book-time/${bookingId}`);if(response.status===200){alert('Booking deleted successfully');setBookingId(null);// Clear booking ID\n}else{alert('Failed to delete booking. Please try again.');}}catch(error){console.error('Error deleting booking:',error.response||error.message);alert('Error deleting booking. Please try again later.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Dashboard\"}),/*#__PURE__*/_jsx(Calendar,{onChange:setDate,value:date}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Available Times for \",date.toDateString()]}),availableTimes.length>0?/*#__PURE__*/_jsx(\"ul\",{children:availableTimes.map((time,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedTime(time),children:time})},index))}):/*#__PURE__*/_jsx(\"p\",{children:\"No available times for the selected date.\"})]}),selectedTime&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Book a Reservation for \",selectedTime,\" on \",date.toDateString()]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();handleBooking();},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userName,onChange:e=>setUserName(e.target.value),placeholder:\"Enter your name\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:userEmail,onChange:e=>setUserEmail(e.target.value),placeholder:\"Enter your email\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",value:userPhone,onChange:e=>setUserPhone(e.target.value),placeholder:\"Enter your phone number\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:service,onChange:e=>setService(e.target.value),placeholder:\"Enter service\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Book Time\"})]}),bookingId&&/*#__PURE__*/_jsx(\"button\",{onClick:handleDeleteBooking,children:\"Cancel Booking\"})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","jsx","_jsx","jsxs","_jsxs","Dashboard","_ref","user","date","setDate","Date","availableTimes","setAvailableTimes","selectedTime","setSelectedTime","service","setService","userName","setUserName","userEmail","setUserEmail","userPhone","setUserPhone","bookingId","setBookingId","fetchAvailableTimes","res","get","params","toDateString","data","times","error","console","handleBooking","alert","response","post","time","name","email","phone","status","message","handleDeleteBooking","delete","children","onChange","value","length","map","index","onClick","onSubmit","e","preventDefault","type","target","placeholder","required"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar'; // Make sure this package is installed\r\nimport './Styling/dashboardStyle.css'; // Adjust the path to your custom CSS file\r\n\r\nconst Dashboard = ({ user }) => {\r\n    // State variables\r\n    const [date, setDate] = useState(new Date());\r\n    const [availableTimes, setAvailableTimes] = useState([]);\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n    const [service, setService] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPhone, setUserPhone] = useState('');\r\n    const [bookingId, setBookingId] = useState(null);\r\n\r\n    // Fetch available times whenever the date changes\r\n    useEffect(() => {\r\n        const fetchAvailableTimes = async () => {\r\n            try {\r\n                const res = await axios.get('http://192.168.1.96:5000/api/get-times', {\r\n                    params: { date: date.toDateString() }\r\n                });\r\n                setAvailableTimes(res.data.times || []);\r\n            } catch (error) {\r\n                console.error('Error fetching available times:', error);\r\n            }\r\n        };\r\n\r\n        fetchAvailableTimes();\r\n    }, [date]);\r\n\r\n    const handleBooking = async () => {\r\n        if (!selectedTime || !service || !userName || !userEmail || !userPhone) {\r\n            alert('Please fill in all fields before booking.');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await axios.post('http://192.168.1.96:5000/api/book-time', {\r\n                date: date.toDateString(),\r\n                time: selectedTime,\r\n                service,\r\n                user: {\r\n                    name: userName,\r\n                    email: userEmail,\r\n                    phone: userPhone\r\n                }\r\n            });\r\n    \r\n            if (response.status === 200) {\r\n                setBookingId(response.data.bookingId); // Save the booking ID\r\n                alert('Booking successful');\r\n                setSelectedTime('');\r\n                setService('');\r\n                setUserName('');\r\n                setUserEmail('');\r\n                setUserPhone('');\r\n            } else {\r\n                alert('Failed to book time. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error making booking:', error.response || error.message);\r\n            alert('Error making booking. Please try again later.');\r\n        }\r\n    };\r\n    \r\n    const handleDeleteBooking = async () => {\r\n        if (!bookingId) {\r\n            alert('No booking ID available.');\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const response = await axios.delete(`http://localhost:5000/api/book-time/${bookingId}`);\r\n    \r\n            if (response.status === 200) {\r\n                alert('Booking deleted successfully');\r\n                setBookingId(null); // Clear booking ID\r\n            } else {\r\n                alert('Failed to delete booking. Please try again.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting booking:', error.response || error.message);\r\n            alert('Error deleting booking. Please try again later.');\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard</h1>\r\n            <Calendar onChange={setDate} value={date} />\r\n            <div>\r\n                <h2>Available Times for {date.toDateString()}</h2>\r\n                {availableTimes.length > 0 ? (\r\n                    <ul>\r\n                        {availableTimes.map((time, index) => (\r\n                            <li key={index}>\r\n                                <button onClick={() => setSelectedTime(time)}>{time}</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>No available times for the selected date.</p>\r\n                )}\r\n            </div>\r\n            {selectedTime && (\r\n                <div>\r\n                    <h3>Book a Reservation for {selectedTime} on {date.toDateString()}</h3>\r\n                    <form onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        handleBooking();\r\n                    }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={userName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                            placeholder=\"Enter your name\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            value={userEmail}\r\n                            onChange={(e) => setUserEmail(e.target.value)}\r\n                            placeholder=\"Enter your email\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"tel\"\r\n                            value={userPhone}\r\n                            onChange={(e) => setUserPhone(e.target.value)}\r\n                            placeholder=\"Enter your phone number\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={service}\r\n                            onChange={(e) => setService(e.target.value)}\r\n                            placeholder=\"Enter service\"\r\n                            required\r\n                        />\r\n                        <button type=\"submit\">Book Time</button>\r\n                    </form>\r\n                    {bookingId && (\r\n                        <button onClick={handleDeleteBooking}>Cancel Booking</button>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CAAE;AACvC,MAAO,8BAA8B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACvB;AACA,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,GAAI,CAAAa,IAAI,CAAC,CAAC,CAAC,CAC5C,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACsB,SAAS,CAAEC,YAAY,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC0B,SAAS,CAAEC,YAAY,CAAC,CAAG3B,QAAQ,CAAC,IAAI,CAAC,CAEhD;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA2B,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,CAAC,wCAAwC,CAAE,CAClEC,MAAM,CAAE,CAAEpB,IAAI,CAAEA,IAAI,CAACqB,YAAY,CAAC,CAAE,CACxC,CAAC,CAAC,CACFjB,iBAAiB,CAACc,GAAG,CAACI,IAAI,CAACC,KAAK,EAAI,EAAE,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CAC3D,CACJ,CAAC,CAEDP,mBAAmB,CAAC,CAAC,CACzB,CAAC,CAAE,CAACjB,IAAI,CAAC,CAAC,CAEV,KAAM,CAAA0B,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CAACrB,YAAY,EAAI,CAACE,OAAO,EAAI,CAACE,QAAQ,EAAI,CAACE,SAAS,EAAI,CAACE,SAAS,CAAE,CACpEc,KAAK,CAAC,2CAA2C,CAAC,CAClD,OACJ,CAEA,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArC,KAAK,CAACsC,IAAI,CAAC,wCAAwC,CAAE,CACxE7B,IAAI,CAAEA,IAAI,CAACqB,YAAY,CAAC,CAAC,CACzBS,IAAI,CAAEzB,YAAY,CAClBE,OAAO,CACPR,IAAI,CAAE,CACFgC,IAAI,CAAEtB,QAAQ,CACduB,KAAK,CAAErB,SAAS,CAChBsB,KAAK,CAAEpB,SACX,CACJ,CAAC,CAAC,CAEF,GAAIe,QAAQ,CAACM,MAAM,GAAK,GAAG,CAAE,CACzBlB,YAAY,CAACY,QAAQ,CAACN,IAAI,CAACP,SAAS,CAAC,CAAE;AACvCY,KAAK,CAAC,oBAAoB,CAAC,CAC3BrB,eAAe,CAAC,EAAE,CAAC,CACnBE,UAAU,CAAC,EAAE,CAAC,CACdE,WAAW,CAAC,EAAE,CAAC,CACfE,YAAY,CAAC,EAAE,CAAC,CAChBE,YAAY,CAAC,EAAE,CAAC,CACpB,CAAC,IAAM,CACHa,KAAK,CAAC,wCAAwC,CAAC,CACnD,CACJ,CAAE,MAAOH,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACI,QAAQ,EAAIJ,KAAK,CAACW,OAAO,CAAC,CACvER,KAAK,CAAC,+CAA+C,CAAC,CAC1D,CACJ,CAAC,CAED,KAAM,CAAAS,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CAACrB,SAAS,CAAE,CACZY,KAAK,CAAC,0BAA0B,CAAC,CACjC,OACJ,CAEA,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAArC,KAAK,CAAC8C,MAAM,CAAC,uCAAuCtB,SAAS,EAAE,CAAC,CAEvF,GAAIa,QAAQ,CAACM,MAAM,GAAK,GAAG,CAAE,CACzBP,KAAK,CAAC,8BAA8B,CAAC,CACrCX,YAAY,CAAC,IAAI,CAAC,CAAE;AACxB,CAAC,IAAM,CACHW,KAAK,CAAC,6CAA6C,CAAC,CACxD,CACJ,CAAE,MAAOH,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAACI,QAAQ,EAAIJ,KAAK,CAACW,OAAO,CAAC,CACzER,KAAK,CAAC,iDAAiD,CAAC,CAC5D,CACJ,CAAC,CAGD,mBACI/B,KAAA,QAAA0C,QAAA,eACI5C,IAAA,OAAA4C,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB5C,IAAA,CAACF,QAAQ,EAAC+C,QAAQ,CAAEtC,OAAQ,CAACuC,KAAK,CAAExC,IAAK,CAAE,CAAC,cAC5CJ,KAAA,QAAA0C,QAAA,eACI1C,KAAA,OAAA0C,QAAA,EAAI,sBAAoB,CAACtC,IAAI,CAACqB,YAAY,CAAC,CAAC,EAAK,CAAC,CACjDlB,cAAc,CAACsC,MAAM,CAAG,CAAC,cACtB/C,IAAA,OAAA4C,QAAA,CACKnC,cAAc,CAACuC,GAAG,CAAC,CAACZ,IAAI,CAAEa,KAAK,gBAC5BjD,IAAA,OAAA4C,QAAA,cACI5C,IAAA,WAAQkD,OAAO,CAAEA,CAAA,GAAMtC,eAAe,CAACwB,IAAI,CAAE,CAAAQ,QAAA,CAAER,IAAI,CAAS,CAAC,EADxDa,KAEL,CACP,CAAC,CACF,CAAC,cAELjD,IAAA,MAAA4C,QAAA,CAAG,2CAAyC,CAAG,CAClD,EACA,CAAC,CACLjC,YAAY,eACTT,KAAA,QAAA0C,QAAA,eACI1C,KAAA,OAAA0C,QAAA,EAAI,yBAAuB,CAACjC,YAAY,CAAC,MAAI,CAACL,IAAI,CAACqB,YAAY,CAAC,CAAC,EAAK,CAAC,cACvEzB,KAAA,SAAMiD,QAAQ,CAAGC,CAAC,EAAK,CACnBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBrB,aAAa,CAAC,CAAC,CACnB,CAAE,CAAAY,QAAA,eACE5C,IAAA,UACIsD,IAAI,CAAC,MAAM,CACXR,KAAK,CAAE/B,QAAS,CAChB8B,QAAQ,CAAGO,CAAC,EAAKpC,WAAW,CAACoC,CAAC,CAACG,MAAM,CAACT,KAAK,CAAE,CAC7CU,WAAW,CAAC,iBAAiB,CAC7BC,QAAQ,MACX,CAAC,cACFzD,IAAA,UACIsD,IAAI,CAAC,OAAO,CACZR,KAAK,CAAE7B,SAAU,CACjB4B,QAAQ,CAAGO,CAAC,EAAKlC,YAAY,CAACkC,CAAC,CAACG,MAAM,CAACT,KAAK,CAAE,CAC9CU,WAAW,CAAC,kBAAkB,CAC9BC,QAAQ,MACX,CAAC,cACFzD,IAAA,UACIsD,IAAI,CAAC,KAAK,CACVR,KAAK,CAAE3B,SAAU,CACjB0B,QAAQ,CAAGO,CAAC,EAAKhC,YAAY,CAACgC,CAAC,CAACG,MAAM,CAACT,KAAK,CAAE,CAC9CU,WAAW,CAAC,yBAAyB,CACrCC,QAAQ,MACX,CAAC,cACFzD,IAAA,UACIsD,IAAI,CAAC,MAAM,CACXR,KAAK,CAAEjC,OAAQ,CACfgC,QAAQ,CAAGO,CAAC,EAAKtC,UAAU,CAACsC,CAAC,CAACG,MAAM,CAACT,KAAK,CAAE,CAC5CU,WAAW,CAAC,eAAe,CAC3BC,QAAQ,MACX,CAAC,cACFzD,IAAA,WAAQsD,IAAI,CAAC,QAAQ,CAAAV,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,CACNvB,SAAS,eACNrB,IAAA,WAAQkD,OAAO,CAAER,mBAAoB,CAAAE,QAAA,CAAC,gBAAc,CAAQ,CAC/D,EACA,CACR,EACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAzC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}