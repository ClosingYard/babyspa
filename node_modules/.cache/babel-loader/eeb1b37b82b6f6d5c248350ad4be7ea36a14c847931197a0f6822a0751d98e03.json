{"ast":null,"code":"import React,{useState}from'react';import supabase from'../supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SignUp(_ref){let{setUser}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[phoneNumber,setPhoneNumber]=useState('');const[error,setError]=useState('');const handleSignUp=async e=>{e.preventDefault();setError('');// Clear previous errors\ntry{// Sign up the user with Supabase Auth\nconst{data,error}=await supabase.auth.signUp({email,password});if(error){throw error;}const{user}=data;// If the user is created successfully, insert profile data into the profiles table\nconst{error:profileError}=await supabase.from('profiles').insert([{id:user.id,// Set user ID as the primary key\nfirst_name:firstName,last_name:lastName,email:user.email,phone_number:phoneNumber}]);if(profileError){throw profileError;}// Optionally set user information in state or local storage\nsetUser(user);// Redirect or show a success message\nconsole.log('Sign up successful and profile created.');}catch(err){console.log('Failed to sign up:',err.message);setError('Sign up failed. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignUp,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"First Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:firstName,onChange:e=>setFirstName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Last Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:lastName,onChange:e=>setLastName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Phone Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:phoneNumber,onChange:e=>setPhoneNumber(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign Up\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error})]})]});}export default SignUp;","map":{"version":3,"names":["React","useState","supabase","jsx","_jsx","jsxs","_jsxs","SignUp","_ref","setUser","email","setEmail","password","setPassword","firstName","setFirstName","lastName","setLastName","phoneNumber","setPhoneNumber","error","setError","handleSignUp","e","preventDefault","data","auth","signUp","user","profileError","from","insert","id","first_name","last_name","phone_number","console","log","err","message","children","onSubmit","type","value","onChange","target","required"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport supabase from '../supabaseClient';\r\n\r\nfunction SignUp({ setUser }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSignUp = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous errors\r\n\r\n        try {\r\n            // Sign up the user with Supabase Auth\r\n            const { data, error } = await supabase.auth.signUp({\r\n                email,\r\n                password\r\n            });\r\n\r\n            if (error) {\r\n                throw error;\r\n            }\r\n\r\n            const { user } = data;\r\n\r\n            // If the user is created successfully, insert profile data into the profiles table\r\n            const { error: profileError } = await supabase\r\n                .from('profiles')\r\n                .insert([\r\n                    {\r\n                        id: user.id, // Set user ID as the primary key\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        email: user.email,\r\n                        phone_number: phoneNumber\r\n                    }\r\n                ]);\r\n\r\n            if (profileError) {\r\n                throw profileError;\r\n            }\r\n\r\n            // Optionally set user information in state or local storage\r\n            setUser(user);\r\n\r\n            // Redirect or show a success message\r\n            console.log('Sign up successful and profile created.');\r\n\r\n        } catch (err) {\r\n            console.log('Failed to sign up:', err.message);\r\n            setError('Sign up failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sign Up</h2>\r\n            <form onSubmit={handleSignUp}>\r\n                <div>\r\n                    <label>First Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        onChange={(e) => setFirstName(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Last Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={(e) => setLastName(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Phone Number:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Sign Up</button>\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}