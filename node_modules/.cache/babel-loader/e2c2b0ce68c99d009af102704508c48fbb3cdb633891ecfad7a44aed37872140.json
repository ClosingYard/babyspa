{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\components\\\\AvailableTimesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AvailableTimesForm.css';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableTimesForm = ({\n  onSaveTimes,\n  onDeleteTimes,\n  availableTimes\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [timeInput, setTimeInput] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [templateName, setTemplateName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [menuTemplate, setMenuTemplate] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [templateToDelete, setTemplateToDelete] = useState(null);\n  const menuRef = useRef(null); // Ref for the menu container\n\n  useEffect(() => {\n    const fetchTemplates = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('templates').select('*');\n        if (error) throw error;\n        setTemplates(data || []);\n      } catch (error) {\n        console.error('Error fetching templates:', error);\n      }\n    };\n    fetchTemplates();\n  }, []);\n  useEffect(() => {\n    // Close the menu if clicked outside\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuTemplate(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleAddTime = () => {\n    if (timeInput) {\n      setTimes([...times, timeInput]);\n      setTimeInput('');\n    }\n  };\n  const handleSave = async times => {\n    try {\n      // Assuming 'available_times' is the table where times should be saved\n      const {\n        error\n      } = await supabase.from('available_times').upsert(times.map(time => ({\n        date: new Date().toISOString().split('T')[0],\n        time: time\n      })));\n      if (error) throw error;\n      console.log('Times saved successfully');\n    } catch (error) {\n      console.error('Failed to save times:', error.message);\n    }\n  };\n  const handleSaveTemplate = async () => {\n    if (templateName && times.length) {\n      try {\n        const newTemplate = {\n          name: templateName,\n          times: JSON.stringify(times)\n        };\n        const {\n          error\n        } = await supabase.from('templates').insert([newTemplate]);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setTemplateName('');\n        setTimes([]);\n      } catch (error) {\n        console.error('Error saving template:', error);\n      }\n    } else {\n      alert('Template name or times cannot be empty');\n    }\n  };\n  const handleSelectTemplate = async e => {\n    const selected = e.target.value;\n    setSelectedTemplate(selected);\n    if (selected) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('templates').select('times').eq('name', selected).single();\n        if (error) throw error;\n        const template = data;\n        if (template) {\n          setTimes(JSON.parse(template.times));\n        }\n      } catch (error) {\n        console.error('Error fetching template:', error);\n      }\n    } else {\n      setTimes([]);\n    }\n  };\n  const handleDeleteTemplate = async () => {\n    if (templateToDelete) {\n      try {\n        const {\n          error\n        } = await supabase.from('templates').delete().eq('name', templateToDelete);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setShowConfirmation(false);\n        setTemplateToDelete(null);\n      } catch (error) {\n        console.error('Error deleting template:', error);\n      }\n    }\n  };\n  const handleConfirmDelete = () => {\n    handleDeleteTemplate();\n  };\n  const handleActionClick = templateName => {\n    setMenuTemplate(templateName);\n    setShowConfirmation(false);\n  };\n  const handleMenuAction = action => {\n    if (action === 'Delete') {\n      setTemplateToDelete(menuTemplate);\n      setShowConfirmation(true);\n    } else if (action === 'Use') {\n      const template = templates.find(t => t.name === menuTemplate);\n      if (template) {\n        setTimes(JSON.parse(template.times));\n      }\n      setMenuTemplate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Add Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: timeInput,\n          onChange: e => setTimeInput(e.target.value),\n          placeholder: \"Enter available time (e.g., 09:00 AM)\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddTime,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Times to be saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [time, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => setTimes(times.filter((_, i) => i !== index)),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Active Times in Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [time, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => onDeleteTimes([time]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: templateName,\n          onChange: e => setTemplateName(e.target.value),\n          placeholder: \"Template Name\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleSaveTemplate,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Use Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select\",\n          value: selectedTemplate,\n          onChange: handleSelectTemplate,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), templates.map((template, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: template.name,\n            children: template.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Saved Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: templates.map((template, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [template.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"menu-button\",\n              onClick: () => handleActionClick(template.name),\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), menuTemplate === template.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-menu\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"menu-button\",\n                onClick: () => handleMenuAction('Use'),\n                children: \"Use Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"menu-button\",\n                onClick: () => handleMenuAction('Delete'),\n                children: \"Delete Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"menu-button close-button\",\n                onClick: () => setMenuTemplate(null),\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this template?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-button\",\n        onClick: handleConfirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        onClick: () => setShowConfirmation(false),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableTimesForm, \"cDqQMZgAZZEUj29AagmfnO63aCo=\");\n_c = AvailableTimesForm;\nexport default AvailableTimesForm;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","jsxDEV","_jsxDEV","AvailableTimesForm","onSaveTimes","onDeleteTimes","availableTimes","_s","times","setTimes","timeInput","setTimeInput","templates","setTemplates","templateName","setTemplateName","selectedTemplate","setSelectedTemplate","menuTemplate","setMenuTemplate","showConfirmation","setShowConfirmation","templateToDelete","setTemplateToDelete","menuRef","fetchTemplates","data","error","from","select","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTime","handleSave","upsert","map","time","date","Date","toISOString","split","log","message","handleSaveTemplate","length","newTemplate","name","JSON","stringify","insert","fetchError","alert","handleSelectTemplate","e","selected","value","eq","single","template","parse","handleDeleteTemplate","delete","handleConfirmDelete","handleActionClick","handleMenuAction","action","find","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","index","filter","_","i","ref","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AvailableTimesForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AvailableTimesForm.css';\r\nimport supabase from '../supabaseClient';\r\n\r\nconst AvailableTimesForm = ({ onSaveTimes, onDeleteTimes, availableTimes }) => {\r\n    const [times, setTimes] = useState([]);\r\n    const [timeInput, setTimeInput] = useState('');\r\n    const [templates, setTemplates] = useState([]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const [selectedTemplate, setSelectedTemplate] = useState('');\r\n    const [menuTemplate, setMenuTemplate] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [templateToDelete, setTemplateToDelete] = useState(null);\r\n    const menuRef = useRef(null); // Ref for the menu container\r\n\r\n    useEffect(() => {\r\n        const fetchTemplates = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('templates')\r\n                    .select('*');\r\n\r\n                if (error) throw error;\r\n\r\n                setTemplates(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching templates:', error);\r\n            }\r\n        };\r\n\r\n        fetchTemplates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Close the menu if clicked outside\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuTemplate(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleAddTime = () => {\r\n        if (timeInput) {\r\n            setTimes([...times, timeInput]);\r\n            setTimeInput('');\r\n        }\r\n    };\r\n\r\n    const handleSave = async (times) => {\r\n        try {\r\n            // Assuming 'available_times' is the table where times should be saved\r\n            const { error } = await supabase\r\n                .from('available_times')\r\n                .upsert(times.map(time => ({ date: new Date().toISOString().split('T')[0], time: time })));\r\n    \r\n            if (error) throw error;\r\n    \r\n            console.log('Times saved successfully');\r\n        } catch (error) {\r\n            console.error('Failed to save times:', error.message);\r\n        }\r\n    };\r\n    \r\n\r\n\r\n    const handleSaveTemplate = async () => {\r\n        if (templateName && times.length) {\r\n            try {\r\n                const newTemplate = { name: templateName, times: JSON.stringify(times) };\r\n                const { error } = await supabase\r\n                    .from('templates')\r\n                    .insert([newTemplate]);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setTemplateName('');\r\n                setTimes([]);\r\n            } catch (error) {\r\n                console.error('Error saving template:', error);\r\n            }\r\n        } else {\r\n            alert('Template name or times cannot be empty');\r\n        }\r\n    };\r\n\r\n    const handleSelectTemplate = async (e) => {\r\n        const selected = e.target.value;\r\n        setSelectedTemplate(selected);\r\n\r\n        if (selected) {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('templates')\r\n                    .select('times')\r\n                    .eq('name', selected)\r\n                    .single();\r\n\r\n                if (error) throw error;\r\n\r\n                const template = data;\r\n                if (template) {\r\n                    setTimes(JSON.parse(template.times));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching template:', error);\r\n            }\r\n        } else {\r\n            setTimes([]);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTemplate = async () => {\r\n        if (templateToDelete) {\r\n            try {\r\n                const { error } = await supabase\r\n                    .from('templates')\r\n                    .delete()\r\n                    .eq('name', templateToDelete);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setShowConfirmation(false);\r\n                setTemplateToDelete(null);\r\n            } catch (error) {\r\n                console.error('Error deleting template:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const handleConfirmDelete = () => {\r\n        handleDeleteTemplate();\r\n    };\r\n\r\n    const handleActionClick = (templateName) => {\r\n        setMenuTemplate(templateName);\r\n        setShowConfirmation(false);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        if (action === 'Delete') {\r\n            setTemplateToDelete(menuTemplate);\r\n            setShowConfirmation(true);\r\n        } else if (action === 'Use') {\r\n            const template = templates.find((t) => t.name === menuTemplate);\r\n            if (template) {\r\n                setTimes(JSON.parse(template.times));\r\n            }\r\n            setMenuTemplate(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"times-form\">\r\n            <div className=\"left-side\">\r\n                <div className=\"form-group\">\r\n                    <h4 className=\"label\">Add Times</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={timeInput}\r\n                        onChange={(e) => setTimeInput(e.target.value)}\r\n                        placeholder=\"Enter available time (e.g., 09:00 AM)\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleAddTime}>Add Time</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Times to be saved</h4>\r\n                    <ul className=\"list\">\r\n                        {times.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {time}\r\n                                <span className=\"delete-icon\" onClick={() => setTimes(times.filter((_, i) => i !== index))}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"save-button\" onClick={handleSave}>Save Times</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Active Times in Calendar</h4>\r\n                    <ul className=\"list\">\r\n                        {availableTimes.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {time}\r\n                                <span className=\"delete-icon\" onClick={() => onDeleteTimes([time])}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Create Template</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={templateName}\r\n                        onChange={(e) => setTemplateName(e.target.value)}\r\n                        placeholder=\"Template Name\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleSaveTemplate}>Save Template</button>\r\n                </div>\r\n\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Use Template</h4>\r\n                    <select className=\"select\" value={selectedTemplate} onChange={handleSelectTemplate}>\r\n                        <option value=\"\">Select a template</option>\r\n                        {templates.map((template, index) => (\r\n                            <option key={index} value={template.name}>\r\n                                {template.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <h4 className=\"label\">Saved Templates</h4>\r\n                    <ul className=\"list\">\r\n                        {templates.map((template, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {template.name}\r\n                                <button\r\n                                    className=\"menu-button\"\r\n                                    onClick={() => handleActionClick(template.name)}\r\n                                >\r\n                                    Actions\r\n                                </button>\r\n                                {menuTemplate === template.name && (\r\n                                    <div className=\"split-menu\" ref={menuRef}>\r\n                                        <button\r\n                                            className=\"menu-button\"\r\n                                            onClick={() => handleMenuAction('Use')}\r\n                                        >\r\n                                            Use Template\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"menu-button\"\r\n                                            onClick={() => handleMenuAction('Delete')}\r\n                                        >\r\n                                            Delete Template\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"menu-button close-button\"\r\n                                            onClick={() => setMenuTemplate(null)}\r\n                                        >\r\n                                            Close\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            {showConfirmation && (\r\n                <div className=\"confirmation-dialog\">\r\n                    <p>Are you sure you want to delete this template?</p>\r\n                    <button className=\"confirm-button\" onClick={handleConfirmDelete}>Yes</button>\r\n                    <button className=\"cancel-button\" onClick={() => setShowConfirmation(false)}>No</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableTimesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}