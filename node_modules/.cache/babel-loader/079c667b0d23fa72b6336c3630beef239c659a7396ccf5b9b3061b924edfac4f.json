{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\components\\\\AvailableTimesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AvailableTimesForm.css';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidDate = date => {\n  return !isNaN(Date.parse(date));\n};\nconst isValidTime = time => {\n  const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n  return timeRegex.test(time);\n};\nconst formatTime = time => {\n  return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nconst AvailableTimesForm = ({\n  onSaveTimes,\n  onDeleteTimes,\n  availableTimes,\n  selectedDate\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [timeInput, setTimeInput] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [templateName, setTemplateName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [menuTemplate, setMenuTemplate] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [templateToDelete, setTemplateToDelete] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    const fetchTemplates = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('*');\n        if (error) throw error;\n        setTemplates(data || []);\n      } catch (error) {\n        console.error('Error fetching templates:', error);\n      }\n    };\n    fetchTemplates();\n  }, []);\n  useEffect(() => {\n    // Close the menu if clicked outside\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuTemplate(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleAddTime = () => {\n    const newErrors = [];\n    if (!isValidDate(selectedDate)) {\n      newErrors.push('Invalid date.');\n    }\n    if (!isValidTime(timeInput)) {\n      newErrors.push('Invalid time format.');\n    }\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setErrors([]);\n    setTimes([...times, {\n      date: selectedDate,\n      time: timeInput\n    }]);\n    setTimeInput('');\n  };\n  const handleSave = async () => {\n    if (times.length === 0) {\n      alert('No times to save.');\n      return;\n    }\n    const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\n    if (invalidTimes.length > 0) {\n      setErrors(['Some time entries are invalid and will not be saved.']);\n      return;\n    }\n    try {\n      const formattedTimes = times.map(time => ({\n        date: time.date,\n        time: time.time\n      }));\n      const {\n        data,\n        error\n      } = await supabase.from('available_times').upsert(formattedTimes, {\n        returning: 'representation'\n      });\n      if (error) throw error;\n      setTimes([]);\n      setErrors([]);\n    } catch (error) {\n      console.error('Error saving times:', error);\n      setErrors(['An error occurred while saving times.']);\n    }\n  };\n\n  // Adjusted to save only times (no dates) in the template\n  const handleSaveTemplate = async () => {\n    if (templateName && times.length) {\n      const templateTimes = times.map(time => ({\n        time: time.time\n      }));\n      try {\n        const newTemplate = {\n          name: templateName,\n          times: JSON.stringify(templateTimes)\n        };\n        const {\n          error\n        } = await supabase.from('time-templates').insert([newTemplate]);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setTemplateName('');\n        setTimes([]);\n        setErrors([]);\n      } catch (error) {\n        console.error('Error saving template:', error);\n      }\n    } else {\n      alert('Template name or times cannot be empty');\n    }\n  };\n\n  // Adjusted to apply the selected date to the template times\n  const handleSelectTemplate = template => {\n    const templateTimes = JSON.parse(template.times);\n    const appliedTimes = templateTimes.map(time => ({\n      date: selectedDate,\n      time: time.time\n    }));\n    setTimes(appliedTimes);\n    setSelectedTemplate(template.name);\n  };\n  const handleDeleteTemplate = async () => {\n    if (templateToDelete) {\n      try {\n        const {\n          error\n        } = await supabase.from('time-templates').delete().eq('name', templateToDelete);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setShowConfirmation(false);\n        setTemplateToDelete(null);\n      } catch (error) {\n        console.error('Error deleting template:', error);\n      }\n    }\n  };\n  const handleConfirmDelete = () => {\n    handleDeleteTemplate();\n  };\n  const handleActionClick = template => {\n    setMenuTemplate(template);\n    setShowConfirmation(false);\n  };\n  const handleMenuAction = action => {\n    if (action === 'Delete') {\n      setTemplateToDelete(menuTemplate.name);\n      setShowConfirmation(true);\n    } else if (action === 'Use') {\n      handleSelectTemplate(menuTemplate);\n      setMenuTemplate(null);\n    } else if (action === 'Edit') {\n      setTemplateName(menuTemplate.name);\n      setTimes(JSON.parse(menuTemplate.times));\n      setEditMode(true);\n      setMenuTemplate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Add Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: timeInput,\n          onChange: e => setTimeInput(e.target.value),\n          placeholder: \"Enter time\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddTime,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errors\",\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Times to be saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [formatTime(time.time), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => setTimes(times.filter((_, i) => i !== index)),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: templateName,\n          onChange: e => setTemplateName(e.target.value),\n          placeholder: \"Template Name\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSaveTemplate,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Manage Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"template-list\",\n          children: templates.map(template => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"template-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: template.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleActionClick(template),\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)]\n          }, template.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this template?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDelete,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), menuTemplate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-popup\",\n        ref: menuRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Use'),\n          children: \"Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Edit'),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Delete'),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableTimesForm, \"BpTg4eavA08af/aS+bAMm7Ba8JE=\");\n_c = AvailableTimesForm;\nexport default AvailableTimesForm;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","jsxDEV","_jsxDEV","isValidDate","date","isNaN","Date","parse","isValidTime","time","timeRegex","test","formatTime","toLocaleTimeString","hour","minute","AvailableTimesForm","onSaveTimes","onDeleteTimes","availableTimes","selectedDate","_s","times","setTimes","timeInput","setTimeInput","templates","setTemplates","templateName","setTemplateName","selectedTemplate","setSelectedTemplate","menuTemplate","setMenuTemplate","showConfirmation","setShowConfirmation","templateToDelete","setTemplateToDelete","editMode","setEditMode","errors","setErrors","menuRef","fetchTemplates","data","error","from","select","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTime","newErrors","push","length","handleSave","alert","invalidTimes","filter","formattedTimes","map","upsert","returning","handleSaveTemplate","templateTimes","newTemplate","name","JSON","stringify","insert","fetchError","handleSelectTemplate","template","appliedTimes","handleDeleteTemplate","delete","eq","handleConfirmDelete","handleActionClick","handleMenuAction","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","index","_","i","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AvailableTimesForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AvailableTimesForm.css';\r\nimport supabase from '../supabaseClient';\r\n\r\nconst isValidDate = (date) => {\r\n    return !isNaN(Date.parse(date));\r\n};\r\n\r\nconst isValidTime = (time) => {\r\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\r\n    return timeRegex.test(time);\r\n};\r\n\r\nconst formatTime = (time) => {\r\n    return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n};\r\n\r\nconst AvailableTimesForm = ({ onSaveTimes, onDeleteTimes, availableTimes, selectedDate }) => {\r\n    const [times, setTimes] = useState([]);\r\n    const [timeInput, setTimeInput] = useState('');\r\n    const [templates, setTemplates] = useState([]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const [selectedTemplate, setSelectedTemplate] = useState('');\r\n    const [menuTemplate, setMenuTemplate] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [templateToDelete, setTemplateToDelete] = useState(null);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    const menuRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTemplates = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (error) throw error;\r\n\r\n                setTemplates(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching templates:', error);\r\n            }\r\n        };\r\n\r\n        fetchTemplates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Close the menu if clicked outside\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuTemplate(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleAddTime = () => {\r\n        const newErrors = [];\r\n\r\n        if (!isValidDate(selectedDate)) {\r\n            newErrors.push('Invalid date.');\r\n        }\r\n\r\n        if (!isValidTime(timeInput)) {\r\n            newErrors.push('Invalid time format.');\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        setErrors([]);\r\n        setTimes([...times, { date: selectedDate, time: timeInput }]);\r\n        setTimeInput('');\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (times.length === 0) {\r\n            alert('No times to save.');\r\n            return;\r\n        }\r\n    \r\n        const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\r\n    \r\n        if (invalidTimes.length > 0) {\r\n            setErrors(['Some time entries are invalid and will not be saved.']);\r\n            return;\r\n        }\r\n    \r\n        try {\r\n            const formattedTimes = times.map(time => ({\r\n                date: time.date,\r\n                time: time.time\r\n            }));\r\n\r\n            const { data, error } = await supabase\r\n                .from('available_times')\r\n                .upsert(formattedTimes, { returning: 'representation' });\r\n    \r\n            if (error) throw error;\r\n    \r\n            setTimes([]);\r\n            setErrors([]);\r\n        } catch (error) {\r\n            console.error('Error saving times:', error);\r\n            setErrors(['An error occurred while saving times.']);\r\n        }\r\n    };\r\n\r\n    // Adjusted to save only times (no dates) in the template\r\n    const handleSaveTemplate = async () => {\r\n        if (templateName && times.length) {\r\n            const templateTimes = times.map(time => ({ time: time.time }));\r\n\r\n            try {\r\n                const newTemplate = { name: templateName, times: JSON.stringify(templateTimes) };\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .insert([newTemplate]);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setTemplateName('');\r\n                setTimes([]);\r\n                setErrors([]);\r\n            } catch (error) {\r\n                console.error('Error saving template:', error);\r\n            }\r\n        } else {\r\n            alert('Template name or times cannot be empty');\r\n        }\r\n    };\r\n\r\n    // Adjusted to apply the selected date to the template times\r\n    const handleSelectTemplate = (template) => {\r\n        const templateTimes = JSON.parse(template.times);\r\n        const appliedTimes = templateTimes.map(time => ({ date: selectedDate, time: time.time }));\r\n        \r\n        setTimes(appliedTimes);\r\n        setSelectedTemplate(template.name);\r\n    };\r\n\r\n    const handleDeleteTemplate = async () => {\r\n        if (templateToDelete) {\r\n            try {\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .delete()\r\n                    .eq('name', templateToDelete);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setShowConfirmation(false);\r\n                setTemplateToDelete(null);\r\n            } catch (error) {\r\n                console.error('Error deleting template:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        handleDeleteTemplate();\r\n    };\r\n\r\n    const handleActionClick = (template) => {\r\n        setMenuTemplate(template);\r\n        setShowConfirmation(false);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        if (action === 'Delete') {\r\n            setTemplateToDelete(menuTemplate.name);\r\n            setShowConfirmation(true);\r\n        } else if (action === 'Use') {\r\n            handleSelectTemplate(menuTemplate);\r\n            setMenuTemplate(null);\r\n        } else if (action === 'Edit') {\r\n            setTemplateName(menuTemplate.name);\r\n            setTimes(JSON.parse(menuTemplate.times));\r\n            setEditMode(true);\r\n            setMenuTemplate(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"times-form\">\r\n            <div className=\"left-side\">\r\n                <div className=\"form-group\">\r\n                    <h4 className=\"label\">Add Times</h4>\r\n                    <input\r\n                        type=\"time\"\r\n                        value={timeInput}\r\n                        onChange={(e) => setTimeInput(e.target.value)}\r\n                        placeholder=\"Enter time\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleAddTime}>Add Time</button>\r\n                </div>\r\n\r\n                {errors.length > 0 && (\r\n                    <div className=\"errors\">\r\n                        {errors.map((error, index) => (\r\n                            <div key={index} className=\"error-message\">{error}</div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Times to be saved</h4>\r\n                    <ul className=\"list\">\r\n                        {times.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatTime(time.time)}\r\n                                <span className=\"delete-icon\" onClick={() => setTimes(times.filter((_, i) => i !== index))}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"save-button\" onClick={handleSave}>Save Times</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Create Template</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={templateName}\r\n                        onChange={(e) => setTemplateName(e.target.value)}\r\n                        placeholder=\"Template Name\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"save-button\" onClick={handleSaveTemplate}>Save Template</button>\r\n                </div>\r\n\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Manage Templates</h4>\r\n                    <ul className=\"template-list\">\r\n                        {templates.map((template) => (\r\n                            <li key={template.id} className=\"template-item\">\r\n                                <span>{template.name}</span>\r\n                                <div className=\"actions\">\r\n                                    <button onClick={() => handleActionClick(template)}>Actions</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                {showConfirmation && (\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Are you sure you want to delete this template?</p>\r\n                        <button onClick={handleConfirmDelete}>Yes</button>\r\n                        <button onClick={() => setShowConfirmation(false)}>No</button>\r\n                    </div>\r\n                )}\r\n\r\n                {menuTemplate && (\r\n                    <div className=\"menu-popup\" ref={menuRef}>\r\n                        <button onClick={() => handleMenuAction('Use')}>Use</button>\r\n                        <button onClick={() => handleMenuAction('Edit')}>Edit</button>\r\n                        <button onClick={() => handleMenuAction('Delete')}>Delete</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableTimesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}