{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import CalendarComponent from'../components/CalendarComponent';import axios from'axios';import'./Styling/adminDashboard.css';import AvailableTimesForm from'../components/AvailableTimesForm';import config from'../config';// Importing baseURL from config\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[selectedDate,setSelectedDate]=useState(null);const[availableTimes,setAvailableTimes]=useState([]);const[bookings,setBookings]=useState([]);const[showTimesForm,setShowTimesForm]=useState(false);const fetchTimes=useCallback(async()=>{if(selectedDate){try{const response=await axios.get(`${config.baseURL}/get-times`,{params:{date:selectedDate.toDateString()}});setAvailableTimes(response.data.times||[]);}catch(error){console.error(`Failed to fetch times from ${config.baseURL}:`,error);}}},[selectedDate]);useEffect(()=>{console.log(`Fetching times from: ${config.baseURL}/get-times`);fetchTimes();},[fetchTimes]);const fetchBookings=useCallback(async()=>{try{const response=await axios.get(`${config.baseURL}/get-bookings`);setBookings(response.data||[]);}catch(error){console.error('Error fetching bookings:',error);}},[]);useEffect(()=>{fetchBookings();},[fetchBookings]);const handleSaveTimes=async times=>{if(selectedDate){try{await axios.post(`${config.baseURL}/save-times`,{date:selectedDate.toDateString(),times});setAvailableTimes(prevTimes=>[...prevTimes,...times]);}catch(error){console.error('Failed to save times:',error);}}};const handleDeleteTimes=async timesToDelete=>{if(selectedDate){try{await axios.delete(`${config.baseURL}/delete-times`,{data:{date:selectedDate.toDateString(),timesToDelete}});setAvailableTimes(prevTimes=>prevTimes.filter(time=>!timesToDelete.includes(time)));}catch(error){console.error('Failed to delete times:',error);}}};const handleDeleteBooking=async bookingId=>{if(!bookingId){console.error('No booking ID provided');return;}try{await axios.delete(`${config.baseURL}/delete-booking/${bookingId}`);setBookings(prevBookings=>prevBookings.filter(booking=>booking.id!==bookingId));alert('Booking deleted successfully');}catch(error){console.error('Error deleting booking:',error);alert('Error deleting booking');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"heading\",children:\"Admin Dashboard\"}),/*#__PURE__*/_jsx(CalendarComponent,{setSelectedDate:setSelectedDate}),selectedDate&&/*#__PURE__*/_jsxs(\"div\",{className:\"times-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"subHeading-dropdown-toggle\",onClick:()=>setShowTimesForm(!showTimesForm),children:/*#__PURE__*/_jsxs(\"h2\",{className:\"subHeading\",children:[\"Manage Times for \",selectedDate.toDateString()]})}),showTimesForm&&/*#__PURE__*/_jsx(AvailableTimesForm,{onSaveTimes:handleSaveTimes,onDeleteTimes:handleDeleteTimes,availableTimes:availableTimes})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"subHeading\",children:\"All Bookings\"}),/*#__PURE__*/_jsx(BookingsTable,{bookings:bookings,onDeleteBooking:handleDeleteBooking})]})]});};const BookingsTable=_ref=>{let{bookings,onDeleteBooking}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Service\"}),/*#__PURE__*/_jsx(\"th\",{children:\"User Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"User Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"User Phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:bookings.map(booking=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:booking.date}),/*#__PURE__*/_jsx(\"td\",{children:booking.time}),/*#__PURE__*/_jsx(\"td\",{children:booking.service}),/*#__PURE__*/_jsx(\"td\",{children:booking.userName}),/*#__PURE__*/_jsx(\"td\",{children:booking.userEmail}),/*#__PURE__*/_jsx(\"td\",{children:booking.userPhone}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:()=>onDeleteBooking(booking.id),children:\"Cancel Booking\"})})]},booking.id))})]})});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","CalendarComponent","axios","AvailableTimesForm","config","jsx","_jsx","jsxs","_jsxs","AdminDashboard","selectedDate","setSelectedDate","availableTimes","setAvailableTimes","bookings","setBookings","showTimesForm","setShowTimesForm","fetchTimes","response","get","baseURL","params","date","toDateString","data","times","error","console","log","fetchBookings","handleSaveTimes","post","prevTimes","handleDeleteTimes","timesToDelete","delete","filter","time","includes","handleDeleteBooking","bookingId","prevBookings","booking","id","alert","className","children","onClick","onSaveTimes","onDeleteTimes","BookingsTable","onDeleteBooking","_ref","map","service","userName","userEmail","userPhone"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/client/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport CalendarComponent from '../components/CalendarComponent';\r\nimport axios from 'axios';\r\nimport './Styling/adminDashboard.css';\r\nimport AvailableTimesForm from '../components/AvailableTimesForm';\r\nimport config from '../config';  // Importing baseURL from config\r\n\r\nconst AdminDashboard = () => {\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [availableTimes, setAvailableTimes] = useState([]);\r\n    const [bookings, setBookings] = useState([]);\r\n    const [showTimesForm, setShowTimesForm] = useState(false);\r\n\r\n    const fetchTimes = useCallback(async () => {\r\n        if (selectedDate) {\r\n            try {\r\n                const response = await axios.get(`${config.baseURL}/get-times`, {\r\n                    params: { date: selectedDate.toDateString() }\r\n                });\r\n                setAvailableTimes(response.data.times || []);\r\n            } catch (error) {\r\n                console.error(`Failed to fetch times from ${config.baseURL}:`, error);\r\n            }\r\n        }\r\n    }, [selectedDate]);\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(`Fetching times from: ${config.baseURL}/get-times`);\r\n        fetchTimes();\r\n    }, [fetchTimes]);\r\n    \r\n\r\n    const fetchBookings = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${config.baseURL}/get-bookings`);\r\n            setBookings(response.data || []);\r\n        } catch (error) {\r\n            console.error('Error fetching bookings:', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchBookings();\r\n    }, [fetchBookings]);\r\n\r\n    const handleSaveTimes = async (times) => {\r\n        if (selectedDate) {\r\n            try {\r\n                await axios.post(`${config.baseURL}/save-times`, {\r\n                    date: selectedDate.toDateString(),\r\n                    times\r\n                });\r\n                setAvailableTimes((prevTimes) => [...prevTimes, ...times]);\r\n            } catch (error) {\r\n                console.error('Failed to save times:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteTimes = async (timesToDelete) => {\r\n        if (selectedDate) {\r\n            try {\r\n                await axios.delete(`${config.baseURL}/delete-times`, {\r\n                    data: {\r\n                        date: selectedDate.toDateString(),\r\n                        timesToDelete\r\n                    }\r\n                });\r\n                setAvailableTimes((prevTimes) => prevTimes.filter(time => !timesToDelete.includes(time)));\r\n            } catch (error) {\r\n                console.error('Failed to delete times:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteBooking = async (bookingId) => {\r\n        if (!bookingId) {\r\n            console.error('No booking ID provided');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.delete(`${config.baseURL}/delete-booking/${bookingId}`);\r\n            setBookings((prevBookings) => prevBookings.filter((booking) => booking.id !== bookingId));\r\n            alert('Booking deleted successfully');\r\n        } catch (error) {\r\n            console.error('Error deleting booking:', error);\r\n            alert('Error deleting booking');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-container\">\r\n            <h1 className=\"heading\">Admin Dashboard</h1>\r\n            <CalendarComponent setSelectedDate={setSelectedDate} />\r\n\r\n            {selectedDate && (\r\n                <div className=\"times-section\">\r\n                    <button\r\n                        className=\"subHeading-dropdown-toggle\"\r\n                        onClick={() => setShowTimesForm(!showTimesForm)}\r\n                    >\r\n                        <h2 className=\"subHeading\">Manage Times for {selectedDate.toDateString()}</h2>\r\n                    </button>\r\n\r\n                    {showTimesForm && (\r\n                        <AvailableTimesForm\r\n                            onSaveTimes={handleSaveTimes}\r\n                            onDeleteTimes={handleDeleteTimes}\r\n                            availableTimes={availableTimes}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"section\">\r\n                <h2 className=\"subHeading\">All Bookings</h2>\r\n                <BookingsTable bookings={bookings} onDeleteBooking={handleDeleteBooking} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst BookingsTable = ({ bookings, onDeleteBooking }) => (\r\n    <div className=\"table-responsive\">\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Time</th>\r\n                    <th>Service</th>\r\n                    <th>User Name</th>\r\n                    <th>User Email</th>\r\n                    <th>User Phone</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {bookings.map((booking) => (\r\n                    <tr key={booking.id}>\r\n                        <td>{booking.date}</td>\r\n                        <td>{booking.time}</td>\r\n                        <td>{booking.service}</td>\r\n                        <td>{booking.userName}</td>\r\n                        <td>{booking.userEmail}</td>\r\n                        <td>{booking.userPhone}</td>\r\n                        <td>\r\n                            <button\r\n                                className=\"delete-button\"\r\n                                onClick={() => onDeleteBooking(booking.id)}\r\n                            >\r\n                                Cancel Booking\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n);\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}