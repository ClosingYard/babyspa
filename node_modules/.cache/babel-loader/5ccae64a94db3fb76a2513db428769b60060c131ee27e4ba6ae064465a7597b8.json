{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\components\\\\AvailableTimesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AvailableTimesForm.css';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidDate = date => {\n  return !isNaN(Date.parse(date));\n};\nconst isValidTime = time => {\n  const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n  return timeRegex.test(time);\n};\nconst formatDate = date => {\n  return new Date(date).toLocaleDateString();\n};\nconst formatTime = time => {\n  return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nconst AvailableTimesForm = ({\n  onSaveTimes,\n  onDeleteTimes,\n  availableTimes,\n  selectedDate\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [timeInput, setTimeInput] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [templateName, setTemplateName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [menuTemplate, setMenuTemplate] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [templateToDelete, setTemplateToDelete] = useState(null);\n  const menuRef = useRef(null); // Ref for the menu container\n\n  useEffect(() => {\n    const fetchTemplates = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('*');\n        if (error) throw error;\n        setTemplates(data || []);\n      } catch (error) {\n        console.error('Error fetching templates:', error);\n      }\n    };\n    fetchTemplates();\n  }, []);\n  useEffect(() => {\n    // Close the menu if clicked outside\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuTemplate(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleAddTime = () => {\n    if (isValidDate(selectedDate) && isValidTime(timeInput)) {\n      setTimes([...times, {\n        date: selectedDate,\n        time: timeInput\n      }]);\n      setTimeInput('');\n    } else {\n      alert('Invalid date or time format.');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      await onSaveTimes(times);\n      setTimes([]);\n    } catch (error) {\n      console.error('Error saving times:', error);\n    }\n  };\n  const handleSaveTemplate = async () => {\n    if (templateName && times.length) {\n      try {\n        const newTemplate = {\n          name: templateName,\n          times: JSON.stringify(times)\n        };\n        const {\n          error\n        } = await supabase.from('time-templates').insert([newTemplate]);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setTemplateName('');\n        setTimes([]);\n      } catch (error) {\n        console.error('Error saving template:', error);\n      }\n    } else {\n      alert('Template name or times cannot be empty');\n    }\n  };\n  const handleSelectTemplate = async e => {\n    const selected = e.target.value;\n    setSelectedTemplate(selected);\n    if (selected) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('times').eq('name', selected).single();\n        if (error) throw error;\n        const template = data;\n        if (template) {\n          setTimes(JSON.parse(template.times));\n        }\n      } catch (error) {\n        console.error('Error fetching template:', error);\n      }\n    } else {\n      setTimes([]);\n    }\n  };\n  const handleDeleteTemplate = async () => {\n    if (templateToDelete) {\n      try {\n        const {\n          error\n        } = await supabase.from('time-templates').delete().eq('name', templateToDelete);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setShowConfirmation(false);\n        setTemplateToDelete(null);\n      } catch (error) {\n        console.error('Error deleting template:', error);\n      }\n    }\n  };\n  const handleConfirmDelete = () => {\n    handleDeleteTemplate();\n  };\n  const handleActionClick = templateName => {\n    setMenuTemplate(templateName);\n    setShowConfirmation(false);\n  };\n  const handleMenuAction = action => {\n    if (action === 'Delete') {\n      setTemplateToDelete(menuTemplate);\n      setShowConfirmation(true);\n    } else if (action === 'Use') {\n      const template = templates.find(t => t.name === menuTemplate);\n      if (template) {\n        setTimes(JSON.parse(template.times));\n      }\n      setMenuTemplate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Add Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: timeInput,\n          onChange: e => setTimeInput(e.target.value),\n          placeholder: \"Enter time\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddTime,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Times to be saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [formatDate(time.date), \" \", formatTime(time.time), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => setTimes(times.filter((_, i) => i !== index)),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Active Times in Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [formatDate(time.date), \" \", formatTime(time.time), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => onDeleteTimes([time]),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: templateName,\n          onChange: e => setTemplateName(e.target.value),\n          placeholder: \"Template Name\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleSaveTemplate,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Use Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select\",\n          value: selectedTemplate,\n          onChange: handleSelectTemplate,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), templates.map((template, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: template.name,\n            children: template.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Saved Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: templates.map((template, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [template.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"menu-button\",\n              onClick: () => handleActionClick(template.name),\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), menuTemplate === template.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"split-menu\",\n              ref: menuRef,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"menu-button\",\n                onClick: () => handleMenuAction('Use'),\n                children: \"Use Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"menu-button\",\n                onClick: () => handleMenuAction('Delete'),\n                children: \"Delete Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confirmation-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Are you sure you want to delete the template \\\"\", templateToDelete, \"\\\"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConfirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowConfirmation(false),\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableTimesForm, \"cDqQMZgAZZEUj29AagmfnO63aCo=\");\n_c = AvailableTimesForm;\nexport default AvailableTimesForm;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","jsxDEV","_jsxDEV","isValidDate","date","isNaN","Date","parse","isValidTime","time","timeRegex","test","formatDate","toLocaleDateString","formatTime","toLocaleTimeString","hour","minute","AvailableTimesForm","onSaveTimes","onDeleteTimes","availableTimes","selectedDate","_s","times","setTimes","timeInput","setTimeInput","templates","setTemplates","templateName","setTemplateName","selectedTemplate","setSelectedTemplate","menuTemplate","setMenuTemplate","showConfirmation","setShowConfirmation","templateToDelete","setTemplateToDelete","menuRef","fetchTemplates","data","error","from","select","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTime","alert","handleSave","handleSaveTemplate","length","newTemplate","name","JSON","stringify","insert","fetchError","handleSelectTemplate","e","selected","value","eq","single","template","handleDeleteTemplate","delete","handleConfirmDelete","handleActionClick","handleMenuAction","action","find","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","index","filter","_","i","ref","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AvailableTimesForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AvailableTimesForm.css';\r\nimport supabase from '../supabaseClient';\r\n\r\nconst isValidDate = (date) => {\r\n    return !isNaN(Date.parse(date));\r\n};\r\n\r\nconst isValidTime = (time) => {\r\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\r\n    return timeRegex.test(time);\r\n};\r\n\r\nconst formatDate = (date) => {\r\n    return new Date(date).toLocaleDateString();\r\n};\r\n\r\nconst formatTime = (time) => {\r\n    return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n};\r\n\r\nconst AvailableTimesForm = ({ onSaveTimes, onDeleteTimes, availableTimes, selectedDate }) => {\r\n    const [times, setTimes] = useState([]);\r\n    const [timeInput, setTimeInput] = useState('');\r\n    const [templates, setTemplates] = useState([]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const [selectedTemplate, setSelectedTemplate] = useState('');\r\n    const [menuTemplate, setMenuTemplate] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [templateToDelete, setTemplateToDelete] = useState(null);\r\n    const menuRef = useRef(null); // Ref for the menu container\r\n\r\n    useEffect(() => {\r\n        const fetchTemplates = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (error) throw error;\r\n\r\n                setTemplates(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching templates:', error);\r\n            }\r\n        };\r\n\r\n        fetchTemplates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Close the menu if clicked outside\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuTemplate(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleAddTime = () => {\r\n        if (isValidDate(selectedDate) && isValidTime(timeInput)) {\r\n            setTimes([...times, { date: selectedDate, time: timeInput }]);\r\n            setTimeInput('');\r\n        } else {\r\n            alert('Invalid date or time format.');\r\n        }\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            await onSaveTimes(times);\r\n            setTimes([]);\r\n        } catch (error) {\r\n            console.error('Error saving times:', error);\r\n        }\r\n    };\r\n\r\n    const handleSaveTemplate = async () => {\r\n        if (templateName && times.length) {\r\n            try {\r\n                const newTemplate = { name: templateName, times: JSON.stringify(times) };\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .insert([newTemplate]);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setTemplateName('');\r\n                setTimes([]);\r\n            } catch (error) {\r\n                console.error('Error saving template:', error);\r\n            }\r\n        } else {\r\n            alert('Template name or times cannot be empty');\r\n        }\r\n    };\r\n\r\n    const handleSelectTemplate = async (e) => {\r\n        const selected = e.target.value;\r\n        setSelectedTemplate(selected);\r\n\r\n        if (selected) {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('times')\r\n                    .eq('name', selected)\r\n                    .single();\r\n\r\n                if (error) throw error;\r\n\r\n                const template = data;\r\n                if (template) {\r\n                    setTimes(JSON.parse(template.times));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching template:', error);\r\n            }\r\n        } else {\r\n            setTimes([]);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTemplate = async () => {\r\n        if (templateToDelete) {\r\n            try {\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .delete()\r\n                    .eq('name', templateToDelete);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setShowConfirmation(false);\r\n                setTemplateToDelete(null);\r\n            } catch (error) {\r\n                console.error('Error deleting template:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        handleDeleteTemplate();\r\n    };\r\n\r\n    const handleActionClick = (templateName) => {\r\n        setMenuTemplate(templateName);\r\n        setShowConfirmation(false);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        if (action === 'Delete') {\r\n            setTemplateToDelete(menuTemplate);\r\n            setShowConfirmation(true);\r\n        } else if (action === 'Use') {\r\n            const template = templates.find((t) => t.name === menuTemplate);\r\n            if (template) {\r\n                setTimes(JSON.parse(template.times));\r\n            }\r\n            setMenuTemplate(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"times-form\">\r\n            <div className=\"left-side\">\r\n                <div className=\"form-group\">\r\n                    <h4 className=\"label\">Add Times</h4>\r\n                    <input\r\n                        type=\"time\"\r\n                        value={timeInput}\r\n                        onChange={(e) => setTimeInput(e.target.value)}\r\n                        placeholder=\"Enter time\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleAddTime}>Add Time</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Times to be saved</h4>\r\n                    <ul className=\"list\">\r\n                        {times.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatDate(time.date)} {formatTime(time.time)}\r\n                                <span className=\"delete-icon\" onClick={() => setTimes(times.filter((_, i) => i !== index))}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"save-button\" onClick={handleSave}>Save Times</button>\r\n                </div>\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Active Times in Calendar</h4>\r\n                    <ul className=\"list\">\r\n                        {availableTimes.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatDate(time.date)} {formatTime(time.time)}\r\n                                <span className=\"delete-icon\" onClick={() => onDeleteTimes([time])}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Create Template</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={templateName}\r\n                        onChange={(e) => setTemplateName(e.target.value)}\r\n                        placeholder=\"Template Name\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleSaveTemplate}>Save Template</button>\r\n                </div>\r\n\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Use Template</h4>\r\n                    <select className=\"select\" value={selectedTemplate} onChange={handleSelectTemplate}>\r\n                        <option value=\"\">Select a template</option>\r\n                        {templates.map((template, index) => (\r\n                            <option key={index} value={template.name}>\r\n                                {template.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <h4 className=\"label\">Saved Templates</h4>\r\n                    <ul className=\"list\">\r\n                        {templates.map((template, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {template.name}\r\n                                <button\r\n                                    className=\"menu-button\"\r\n                                    onClick={() => handleActionClick(template.name)}\r\n                                >\r\n                                    Actions\r\n                                </button>\r\n                                {menuTemplate === template.name && (\r\n                                    <div className=\"split-menu\" ref={menuRef}>\r\n                                        <button\r\n                                            className=\"menu-button\"\r\n                                            onClick={() => handleMenuAction('Use')}\r\n                                        >\r\n                                            Use Template\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"menu-button\"\r\n                                            onClick={() => handleMenuAction('Delete')}\r\n                                        >\r\n                                            Delete Template\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            {showConfirmation && (\r\n                <div className=\"confirmation-dialog\">\r\n                    <p>Are you sure you want to delete the template \"{templateToDelete}\"?</p>\r\n                    <button onClick={handleConfirmDelete}>Yes</button>\r\n                    <button onClick={() => setShowConfirmation(false)}>No</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableTimesForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,0BAA0B;AACjC,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAIC,IAAI,IAAK;EAC1B,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAAC;AACnC,CAAC;AAED,MAAMI,WAAW,GAAIC,IAAI,IAAK;EAC1B,MAAMC,SAAS,GAAG,6BAA6B;EAC/C,OAAOA,SAAS,CAACC,IAAI,CAACF,IAAI,CAAC;AAC/B,CAAC;AAED,MAAMG,UAAU,GAAIR,IAAI,IAAK;EACzB,OAAO,IAAIE,IAAI,CAACF,IAAI,CAAC,CAACS,kBAAkB,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMC,UAAU,GAAIL,IAAI,IAAK;EACzB,OAAO,IAAIH,IAAI,CAAC,cAAcG,IAAI,KAAK,CAAC,CAACM,kBAAkB,CAAC,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAU,CAAC,CAAC;AAC3G,CAAC;AAED,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,WAAW;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM2C,OAAO,GAAGzC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAM2C,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAM;UAAEC,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAM3C,QAAQ,CACjC4C,IAAI,CAAC,gBAAgB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;QAEhB,IAAIF,KAAK,EAAE,MAAMA,KAAK;QAEtBd,YAAY,CAACa,IAAI,IAAI,EAAE,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDF,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACZ;IACA,MAAMiD,kBAAkB,GAAIC,KAAK,IAAK;MAClC,IAAIR,OAAO,CAACS,OAAO,IAAI,CAACT,OAAO,CAACS,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC5DhB,eAAe,CAAC,IAAI,CAAC;MACzB;IACJ,CAAC;IAEDiB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIpD,WAAW,CAACmB,YAAY,CAAC,IAAId,WAAW,CAACkB,SAAS,CAAC,EAAE;MACrDD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEpB,IAAI,EAAEkB,YAAY;QAAEb,IAAI,EAAEiB;MAAU,CAAC,CAAC,CAAC;MAC7DC,YAAY,CAAC,EAAE,CAAC;IACpB,CAAC,MAAM;MACH6B,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMtC,WAAW,CAACK,KAAK,CAAC;MACxBC,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZG,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI5B,YAAY,IAAIN,KAAK,CAACmC,MAAM,EAAE;MAC9B,IAAI;QACA,MAAMC,WAAW,GAAG;UAAEC,IAAI,EAAE/B,YAAY;UAAEN,KAAK,EAAEsC,IAAI,CAACC,SAAS,CAACvC,KAAK;QAAE,CAAC;QACxE,MAAM;UAAEmB;QAAM,CAAC,GAAG,MAAM3C,QAAQ,CAC3B4C,IAAI,CAAC,gBAAgB,CAAC,CACtBoB,MAAM,CAAC,CAACJ,WAAW,CAAC,CAAC;QAE1B,IAAIjB,KAAK,EAAE,MAAMA,KAAK;QAEtB,MAAM;UAAED,IAAI;UAAEC,KAAK,EAAEsB;QAAW,CAAC,GAAG,MAAMjE,QAAQ,CAC7C4C,IAAI,CAAC,gBAAgB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;QAEhB,IAAIoB,UAAU,EAAE,MAAMA,UAAU;QAEhCpC,YAAY,CAACa,IAAI,IAAI,EAAE,CAAC;QACxBX,eAAe,CAAC,EAAE,CAAC;QACnBN,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC,MAAM;MACHa,KAAK,CAAC,wCAAwC,CAAC;IACnD;EACJ,CAAC;EAED,MAAMU,oBAAoB,GAAG,MAAOC,CAAC,IAAK;IACtC,MAAMC,QAAQ,GAAGD,CAAC,CAAChB,MAAM,CAACkB,KAAK;IAC/BpC,mBAAmB,CAACmC,QAAQ,CAAC;IAE7B,IAAIA,QAAQ,EAAE;MACV,IAAI;QACA,MAAM;UAAE1B,IAAI;UAAEC;QAAM,CAAC,GAAG,MAAM3C,QAAQ,CACjC4C,IAAI,CAAC,gBAAgB,CAAC,CACtBC,MAAM,CAAC,OAAO,CAAC,CACfyB,EAAE,CAAC,MAAM,EAAEF,QAAQ,CAAC,CACpBG,MAAM,CAAC,CAAC;QAEb,IAAI5B,KAAK,EAAE,MAAMA,KAAK;QAEtB,MAAM6B,QAAQ,GAAG9B,IAAI;QACrB,IAAI8B,QAAQ,EAAE;UACV/C,QAAQ,CAACqC,IAAI,CAACvD,KAAK,CAACiE,QAAQ,CAAChD,KAAK,CAAC,CAAC;QACxC;MACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC,MAAM;MACHlB,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAED,MAAMgD,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAInC,gBAAgB,EAAE;MAClB,IAAI;QACA,MAAM;UAAEK;QAAM,CAAC,GAAG,MAAM3C,QAAQ,CAC3B4C,IAAI,CAAC,gBAAgB,CAAC,CACtB8B,MAAM,CAAC,CAAC,CACRJ,EAAE,CAAC,MAAM,EAAEhC,gBAAgB,CAAC;QAEjC,IAAIK,KAAK,EAAE,MAAMA,KAAK;QAEtB,MAAM;UAAED,IAAI;UAAEC,KAAK,EAAEsB;QAAW,CAAC,GAAG,MAAMjE,QAAQ,CAC7C4C,IAAI,CAAC,gBAAgB,CAAC,CACtBC,MAAM,CAAC,GAAG,CAAC;QAEhB,IAAIoB,UAAU,EAAE,MAAMA,UAAU;QAEhCpC,YAAY,CAACa,IAAI,IAAI,EAAE,CAAC;QACxBL,mBAAmB,CAAC,KAAK,CAAC;QAC1BE,mBAAmB,CAAC,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;EACJ,CAAC;EAED,MAAMgC,mBAAmB,GAAGA,CAAA,KAAM;IAC9BF,oBAAoB,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMG,iBAAiB,GAAI9C,YAAY,IAAK;IACxCK,eAAe,CAACL,YAAY,CAAC;IAC7BO,mBAAmB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMwC,gBAAgB,GAAIC,MAAM,IAAK;IACjC,IAAIA,MAAM,KAAK,QAAQ,EAAE;MACrBvC,mBAAmB,CAACL,YAAY,CAAC;MACjCG,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,MAAM,IAAIyC,MAAM,KAAK,KAAK,EAAE;MACzB,MAAMN,QAAQ,GAAG5C,SAAS,CAACmD,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACnB,IAAI,KAAK3B,YAAY,CAAC;MAC/D,IAAIsC,QAAQ,EAAE;QACV/C,QAAQ,CAACqC,IAAI,CAACvD,KAAK,CAACiE,QAAQ,CAAChD,KAAK,CAAC,CAAC;MACxC;MACAW,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAK+E,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBhF,OAAA;MAAK+E,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBhF,OAAA;QAAK+E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBhF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCpF,OAAA;UACIqF,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAE3C,SAAU;UACjB8D,QAAQ,EAAGrB,CAAC,IAAKxC,YAAY,CAACwC,CAAC,CAAChB,MAAM,CAACkB,KAAK,CAAE;UAC9CoB,WAAW,EAAC,YAAY;UACxBR,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFpF,OAAA;UAAQ+E,SAAS,EAAC,YAAY;UAACS,OAAO,EAAEnC,aAAc;UAAA2B,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAENpF,OAAA;QAAAgF,QAAA,gBACIhF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CpF,OAAA;UAAI+E,SAAS,EAAC,MAAM;UAAAC,QAAA,EACf1D,KAAK,CAACmE,GAAG,CAAC,CAAClF,IAAI,EAAEmF,KAAK,kBACnB1F,OAAA;YAAgB+E,SAAS,EAAC,WAAW;YAAAC,QAAA,GAChCtE,UAAU,CAACH,IAAI,CAACL,IAAI,CAAC,EAAC,GAAC,EAACU,UAAU,CAACL,IAAI,CAACA,IAAI,CAAC,eAC9CP,OAAA;cAAM+E,SAAS,EAAC,aAAa;cAACS,OAAO,EAAEA,CAAA,KAAMjE,QAAQ,CAACD,KAAK,CAACqE,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAE;cAAAV,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAF/FM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACLpF,OAAA;UAAQ+E,SAAS,EAAC,aAAa;UAACS,OAAO,EAAEjC,UAAW;UAAAyB,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAENpF,OAAA;QAAAgF,QAAA,gBACIhF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDpF,OAAA;UAAI+E,SAAS,EAAC,MAAM;UAAAC,QAAA,EACf7D,cAAc,CAACsE,GAAG,CAAC,CAAClF,IAAI,EAAEmF,KAAK,kBAC5B1F,OAAA;YAAgB+E,SAAS,EAAC,WAAW;YAAAC,QAAA,GAChCtE,UAAU,CAACH,IAAI,CAACL,IAAI,CAAC,EAAC,GAAC,EAACU,UAAU,CAACL,IAAI,CAACA,IAAI,CAAC,eAC9CP,OAAA;cAAM+E,SAAS,EAAC,aAAa;cAACS,OAAO,EAAEA,CAAA,KAAMtE,aAAa,CAAC,CAACX,IAAI,CAAC,CAAE;cAAAyE,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAFvEM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENpF,OAAA;MAAK+E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBhF,OAAA;QAAK+E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BhF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CpF,OAAA;UACIqF,IAAI,EAAC,MAAM;UACXlB,KAAK,EAAEvC,YAAa;UACpB0D,QAAQ,EAAGrB,CAAC,IAAKpC,eAAe,CAACoC,CAAC,CAAChB,MAAM,CAACkB,KAAK,CAAE;UACjDoB,WAAW,EAAC,eAAe;UAC3BR,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFpF,OAAA;UAAQ+E,SAAS,EAAC,YAAY;UAACS,OAAO,EAAEhC,kBAAmB;UAAAwB,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC,eAENpF,OAAA;QAAK+E,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BhF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvCpF,OAAA;UAAQ+E,SAAS,EAAC,QAAQ;UAACZ,KAAK,EAAErC,gBAAiB;UAACwD,QAAQ,EAAEtB,oBAAqB;UAAAgB,QAAA,gBAC/EhF,OAAA;YAAQmE,KAAK,EAAC,EAAE;YAAAa,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC1C1D,SAAS,CAAC+D,GAAG,CAAC,CAACnB,QAAQ,EAAEoB,KAAK,kBAC3B1F,OAAA;YAAoBmE,KAAK,EAAEG,QAAQ,CAACX,IAAK;YAAAqB,QAAA,EACpCV,QAAQ,CAACX;UAAI,GADL+B,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAETpF,OAAA;UAAI+E,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CpF,OAAA;UAAI+E,SAAS,EAAC,MAAM;UAAAC,QAAA,EACftD,SAAS,CAAC+D,GAAG,CAAC,CAACnB,QAAQ,EAAEoB,KAAK,kBAC3B1F,OAAA;YAAgB+E,SAAS,EAAC,WAAW;YAAAC,QAAA,GAChCV,QAAQ,CAACX,IAAI,eACd3D,OAAA;cACI+E,SAAS,EAAC,aAAa;cACvBS,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACJ,QAAQ,CAACX,IAAI,CAAE;cAAAqB,QAAA,EACnD;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRpD,YAAY,KAAKsC,QAAQ,CAACX,IAAI,iBAC3B3D,OAAA;cAAK+E,SAAS,EAAC,YAAY;cAACe,GAAG,EAAExD,OAAQ;cAAA0C,QAAA,gBACrChF,OAAA;gBACI+E,SAAS,EAAC,aAAa;gBACvBS,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAAC,KAAK,CAAE;gBAAAK,QAAA,EAC1C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTpF,OAAA;gBACI+E,SAAS,EAAC,aAAa;gBACvBS,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAAC,QAAQ,CAAE;gBAAAK,QAAA,EAC7C;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CACR;UAAA,GAvBIM,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELlD,gBAAgB,iBACblC,OAAA;MAAK+E,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChChF,OAAA;QAAAgF,QAAA,GAAG,iDAA8C,EAAC5C,gBAAgB,EAAC,KAAE;MAAA;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzEpF,OAAA;QAAQwF,OAAO,EAAEf,mBAAoB;QAAAO,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClDpF,OAAA;QAAQwF,OAAO,EAAEA,CAAA,KAAMrD,mBAAmB,CAAC,KAAK,CAAE;QAAA6C,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/D,EAAA,CA1QIL,kBAAkB;AAAA+E,EAAA,GAAlB/E,kBAAkB;AA4QxB,eAAeA,kBAAkB;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}