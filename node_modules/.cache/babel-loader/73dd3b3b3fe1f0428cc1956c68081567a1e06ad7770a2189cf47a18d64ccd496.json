{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Navigate}from'react-router-dom';import supabase from'../supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";const AdminRoute=_ref=>{let{children}=_ref;const[isAdmin,setIsAdmin]=useState(null);useEffect(()=>{const checkAdmin=async()=>{try{// Get the current user\nconst{data:{user},error:userError}=await supabase.auth.getUser();if(userError)throw userError;if(user){// Query to check if user is an admin\nconst{data,error}=await supabase.from('roles').select('role').eq('user_id',user.id).single();if(error){console.error('Error checking role:',error);setIsAdmin(false);}else{setIsAdmin(data.role==='admin');}}else{setIsAdmin(false);}}catch(error){console.error('Error in checkAdmin:',error);setIsAdmin(false);}};checkAdmin();},[]);if(isAdmin===null)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// or a spinner\nreturn isAdmin?children:/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"});};export default AdminRoute;","map":{"version":3,"names":["React","useState","useEffect","Navigate","supabase","jsx","_jsx","AdminRoute","_ref","children","isAdmin","setIsAdmin","checkAdmin","data","user","error","userError","auth","getUser","from","select","eq","id","single","console","role","to"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AdminRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport supabase from '../supabaseClient';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n    const [isAdmin, setIsAdmin] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAdmin = async () => {\r\n            try {\r\n                // Get the current user\r\n                const { data: { user }, error: userError } = await supabase.auth.getUser();\r\n                if (userError) throw userError;\r\n\r\n                if (user) {\r\n                    // Query to check if user is an admin\r\n                    const { data, error } = await supabase\r\n                        .from('roles')\r\n                        .select('role')\r\n                        .eq('user_id', user.id)\r\n                        .single();\r\n\r\n                    if (error) {\r\n                        console.error('Error checking role:', error);\r\n                        setIsAdmin(false);\r\n                    } else {\r\n                        setIsAdmin(data.role === 'admin');\r\n                    }\r\n                } else {\r\n                    setIsAdmin(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in checkAdmin:', error);\r\n                setIsAdmin(false);\r\n            }\r\n        };\r\n\r\n        checkAdmin();\r\n    }, []);\r\n\r\n    if (isAdmin === null) return <div>Loading...</div>; // or a spinner\r\n\r\n    return isAdmin ? children : <Navigate to=\"/dashboard\" />;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAU,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA;AACA,KAAM,CAAEC,IAAI,CAAE,CAAEC,IAAK,CAAC,CAAEC,KAAK,CAAEC,SAAU,CAAC,CAAG,KAAM,CAAAZ,QAAQ,CAACa,IAAI,CAACC,OAAO,CAAC,CAAC,CAC1E,GAAIF,SAAS,CAAE,KAAM,CAAAA,SAAS,CAE9B,GAAIF,IAAI,CAAE,CACN;AACA,KAAM,CAAED,IAAI,CAAEE,KAAM,CAAC,CAAG,KAAM,CAAAX,QAAQ,CACjCe,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,MAAM,CAAC,CACdC,EAAE,CAAC,SAAS,CAAEP,IAAI,CAACQ,EAAE,CAAC,CACtBC,MAAM,CAAC,CAAC,CAEb,GAAIR,KAAK,CAAE,CACPS,OAAO,CAACT,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CJ,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,IAAM,CACHA,UAAU,CAACE,IAAI,CAACY,IAAI,GAAK,OAAO,CAAC,CACrC,CACJ,CAAC,IAAM,CACHd,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAE,MAAOI,KAAK,CAAE,CACZS,OAAO,CAACT,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CJ,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDC,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,GAAK,IAAI,CAAE,mBAAOJ,IAAA,QAAAG,QAAA,CAAK,YAAU,CAAK,CAAC,CAAE;AAEpD,MAAO,CAAAC,OAAO,CAAGD,QAAQ,cAAGH,IAAA,CAACH,QAAQ,EAACuB,EAAE,CAAC,YAAY,CAAE,CAAC,CAC5D,CAAC,CAED,cAAe,CAAAnB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}