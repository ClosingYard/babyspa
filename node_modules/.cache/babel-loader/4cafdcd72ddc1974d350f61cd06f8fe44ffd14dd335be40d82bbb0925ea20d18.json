{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar'; // For the calendar\nimport 'react-calendar/dist/Calendar.css'; // For default styling\nimport './Dashboard.css'; // Custom styling (create this file as needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [availableTimes, setAvailableTimes] = useState([]);\n\n  // Handle date change\n  const handleDateChange = newDate => {\n    setDate(newDate);\n    // Fetch available times for the selected date\n    fetchAvailableTimes(newDate);\n  };\n\n  // Fetch available times from API or database\n  const fetchAvailableTimes = async selectedDate => {\n    const formattedDate = selectedDate.toISOString().split('T')[0];\n    // Replace with your API endpoint or Supabase query\n    const response = await fetch(`/api/available-times?date=${formattedDate}`);\n    const data = await response.json();\n    setAvailableTimes(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"available-times\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Available Times for \", date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableTimes.length > 0 ? availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: time.time\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No available times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"ShHfPBP9uwRtQqDy3WMzcPXNd10=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","Dashboard","_s","date","setDate","Date","availableTimes","setAvailableTimes","handleDateChange","newDate","fetchAvailableTimes","selectedDate","formattedDate","toISOString","split","response","fetch","data","json","className","children","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","toDateString","length","map","time","index","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar'; // For the calendar\r\nimport 'react-calendar/dist/Calendar.css'; // For default styling\r\nimport './Dashboard.css'; // Custom styling (create this file as needed)\r\n\r\nconst Dashboard = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [availableTimes, setAvailableTimes] = useState([]);\r\n\r\n    // Handle date change\r\n    const handleDateChange = (newDate) => {\r\n        setDate(newDate);\r\n        // Fetch available times for the selected date\r\n        fetchAvailableTimes(newDate);\r\n    };\r\n\r\n    // Fetch available times from API or database\r\n    const fetchAvailableTimes = async (selectedDate) => {\r\n        const formattedDate = selectedDate.toISOString().split('T')[0];\r\n        // Replace with your API endpoint or Supabase query\r\n        const response = await fetch(`/api/available-times?date=${formattedDate}`);\r\n        const data = await response.json();\r\n        setAvailableTimes(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <Calendar\r\n                onChange={handleDateChange}\r\n                value={date}\r\n            />\r\n            <div className=\"available-times\">\r\n                <h2>Available Times for {date.toDateString()}</h2>\r\n                <ul>\r\n                    {availableTimes.length > 0 ? (\r\n                        availableTimes.map((time, index) => (\r\n                            <li key={index}>{time.time}</li>\r\n                        ))\r\n                    ) : (\r\n                        <li>No available times</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAC;AACvC,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMW,gBAAgB,GAAIC,OAAO,IAAK;IAClCL,OAAO,CAACK,OAAO,CAAC;IAChB;IACAC,mBAAmB,CAACD,OAAO,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAOC,YAAY,IAAK;IAChD,MAAMC,aAAa,GAAGD,YAAY,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6BJ,aAAa,EAAE,CAAC;IAC1E,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCX,iBAAiB,CAACU,IAAI,CAAC;EAC3B,CAAC;EAED,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpB,OAAA,CAACF,QAAQ;MACLuB,QAAQ,EAAEb,gBAAiB;MAC3Bc,KAAK,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACF1B,OAAA;MAAKmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BpB,OAAA;QAAAoB,QAAA,GAAI,sBAAoB,EAACjB,IAAI,CAACwB,YAAY,CAAC,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClD1B,OAAA;QAAAoB,QAAA,EACKd,cAAc,CAACsB,MAAM,GAAG,CAAC,GACtBtB,cAAc,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B/B,OAAA;UAAAoB,QAAA,EAAiBU,IAAI,CAACA;QAAI,GAAjBC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAClC,CAAC,gBAEF1B,OAAA;UAAAoB,QAAA,EAAI;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAxCID,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}