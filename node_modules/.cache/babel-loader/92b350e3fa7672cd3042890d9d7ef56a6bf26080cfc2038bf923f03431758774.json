{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\components\\\\AvailableTimesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './AvailableTimesForm.css';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidDate = date => {\n  return !isNaN(Date.parse(date));\n};\nconst isValidTime = time => {\n  const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n  return timeRegex.test(time);\n};\nconst formatTime = time => {\n  // Ensure the time is in HH:mm format\n  const timeString = time && time.includes(':') ? time : '00:00';\n  return new Date(`1970-01-01T${timeString}:00`).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nconst AvailableTimesForm = ({\n  onSaveTimes,\n  onDeleteTimes,\n  availableTimes,\n  selectedDate\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [timeInput, setTimeInput] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [templateName, setTemplateName] = useState('');\n  const [selectedTemplate, setSelectedTemplate] = useState('');\n  const [menuTemplate, setMenuTemplate] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [templateToDelete, setTemplateToDelete] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    const fetchTemplates = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('*');\n        if (error) throw error;\n        setTemplates(data || []);\n      } catch (error) {\n        console.error('Error fetching templates:', error);\n      }\n    };\n    fetchTemplates();\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuTemplate(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleAddTime = () => {\n    const newErrors = [];\n    if (!isValidDate(selectedDate)) {\n      newErrors.push('Invalid date.');\n    }\n    if (!isValidTime(timeInput)) {\n      newErrors.push('Invalid time format.');\n    }\n    if (newErrors.length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setErrors([]);\n    setTimes([...times, {\n      date: selectedDate,\n      time: timeInput\n    }]);\n    setTimeInput('');\n  };\n  const handleSave = async () => {\n    if (times.length === 0) {\n      alert('No times to save.');\n      return;\n    }\n    const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\n    if (invalidTimes.length > 0) {\n      setErrors(['Some time entries are invalid and will not be saved.']);\n      return;\n    }\n    try {\n      const formattedTimes = times.map(time => ({\n        date: time.date,\n        time: time.time\n      }));\n      const {\n        data,\n        error\n      } = await supabase.from('available_times').upsert(formattedTimes, {\n        returning: 'representation'\n      });\n      if (error) {\n        console.error('Supabase error:', error);\n        throw error;\n      }\n      setTimes([]);\n      setErrors([]);\n    } catch (error) {\n      console.error('Error saving times:', error);\n      setErrors(['An error occurred while saving times.']);\n    }\n  };\n  const handleSaveTemplate = async () => {\n    if (templateName && times.length) {\n      const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\n      if (invalidTimes.length > 0) {\n        setErrors(['Some time entries are invalid and will not be saved.']);\n        return;\n      }\n      try {\n        const newTemplate = {\n          name: templateName,\n          times: JSON.stringify(times)\n        };\n        const {\n          error\n        } = await supabase.from('time-templates').insert([newTemplate]);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setTemplateName('');\n        setTimes([]);\n        setErrors([]);\n      } catch (error) {\n        console.error('Error saving template:', error);\n      }\n    } else {\n      alert('Template name or times cannot be empty');\n    }\n  };\n  const handleSelectTemplate = async e => {\n    const selected = e.target.value;\n    setSelectedTemplate(selected);\n    if (selected) {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('times').eq('name', selected).single();\n        if (error) throw error;\n        const template = data;\n        if (template) {\n          setTimes(JSON.parse(template.times));\n        }\n      } catch (error) {\n        console.error('Error fetching template:', error);\n      }\n    } else {\n      setTimes([]);\n    }\n  };\n  const handleDeleteTemplate = async () => {\n    if (templateToDelete) {\n      try {\n        const {\n          error\n        } = await supabase.from('time-templates').delete().eq('name', templateToDelete);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setShowConfirmation(false);\n        setTemplateToDelete(null);\n      } catch (error) {\n        console.error('Error deleting template:', error);\n      }\n    }\n  };\n  const handleConfirmDelete = () => {\n    handleDeleteTemplate();\n  };\n  const handleActionClick = templateName => {\n    setMenuTemplate(templateName);\n    setShowConfirmation(false);\n  };\n  const handleMenuAction = action => {\n    if (action === 'Delete') {\n      setTemplateToDelete(menuTemplate);\n      setShowConfirmation(true);\n    } else if (action === 'Use') {\n      const template = templates.find(t => t.name === menuTemplate);\n      if (template) {\n        setTimes(JSON.parse(template.times));\n      }\n      setMenuTemplate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Add Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: timeInput,\n          onChange: e => setTimeInput(e.target.value),\n          placeholder: \"Enter time\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddTime,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errors\",\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Times to be saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [formatTime(time.time), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => setTimes(times.filter((_, i) => i !== index)),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Active Times in Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: availableTimes.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: formatTime(time.time)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: templateName,\n          onChange: e => setTemplateName(e.target.value),\n          placeholder: \"Enter template name\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-template-button\",\n          onClick: handleSaveTemplate,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Load Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTemplate,\n          onChange: handleSelectTemplate,\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Template\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this), templates.map(template => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: template.name,\n            children: template.name\n          }, template.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this template?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDelete,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), menuTemplate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        ref: menuRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Use'),\n          children: \"Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Delete'),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableTimesForm, \"37RATljhW7MLqDsGS4PsWnYl0aI=\");\n_c = AvailableTimesForm;\nexport default AvailableTimesForm;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","jsxDEV","_jsxDEV","isValidDate","date","isNaN","Date","parse","isValidTime","time","timeRegex","test","formatTime","timeString","includes","toLocaleTimeString","hour","minute","AvailableTimesForm","onSaveTimes","onDeleteTimes","availableTimes","selectedDate","_s","times","setTimes","timeInput","setTimeInput","templates","setTemplates","templateName","setTemplateName","selectedTemplate","setSelectedTemplate","menuTemplate","setMenuTemplate","showConfirmation","setShowConfirmation","templateToDelete","setTemplateToDelete","errors","setErrors","menuRef","fetchTemplates","data","error","from","select","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTime","newErrors","push","length","handleSave","alert","invalidTimes","filter","formattedTimes","map","upsert","returning","handleSaveTemplate","newTemplate","name","JSON","stringify","insert","fetchError","handleSelectTemplate","e","selected","value","eq","single","template","handleDeleteTemplate","delete","handleConfirmDelete","handleActionClick","handleMenuAction","action","find","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","index","_","i","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AvailableTimesForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './AvailableTimesForm.css';\r\nimport supabase from '../supabaseClient';\r\n\r\nconst isValidDate = (date) => {\r\n    return !isNaN(Date.parse(date));\r\n};\r\n\r\nconst isValidTime = (time) => {\r\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\r\n    return timeRegex.test(time);\r\n};\r\n\r\nconst formatTime = (time) => {\r\n    // Ensure the time is in HH:mm format\r\n    const timeString = time && time.includes(':') ? time : '00:00';\r\n    return new Date(`1970-01-01T${timeString}:00`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n};\r\n\r\nconst AvailableTimesForm = ({ onSaveTimes, onDeleteTimes, availableTimes, selectedDate }) => {\r\n    const [times, setTimes] = useState([]);\r\n    const [timeInput, setTimeInput] = useState('');\r\n    const [templates, setTemplates] = useState([]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const [selectedTemplate, setSelectedTemplate] = useState('');\r\n    const [menuTemplate, setMenuTemplate] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [templateToDelete, setTemplateToDelete] = useState(null);\r\n    const [errors, setErrors] = useState([]);\r\n    const menuRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTemplates = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (error) throw error;\r\n\r\n                setTemplates(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching templates:', error);\r\n            }\r\n        };\r\n\r\n        fetchTemplates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuTemplate(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleAddTime = () => {\r\n        const newErrors = [];\r\n\r\n        if (!isValidDate(selectedDate)) {\r\n            newErrors.push('Invalid date.');\r\n        }\r\n\r\n        if (!isValidTime(timeInput)) {\r\n            newErrors.push('Invalid time format.');\r\n        }\r\n\r\n        if (newErrors.length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        setErrors([]);\r\n        setTimes([...times, { date: selectedDate, time: timeInput }]);\r\n        setTimeInput('');\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (times.length === 0) {\r\n            alert('No times to save.');\r\n            return;\r\n        }\r\n\r\n        const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\r\n\r\n        if (invalidTimes.length > 0) {\r\n            setErrors(['Some time entries are invalid and will not be saved.']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formattedTimes = times.map(time => ({\r\n                date: time.date,\r\n                time: time.time\r\n            }));\r\n\r\n            const { data, error } = await supabase\r\n                .from('available_times')\r\n                .upsert(formattedTimes, { returning: 'representation' });\r\n\r\n            if (error) {\r\n                console.error('Supabase error:', error);\r\n                throw error;\r\n            }\r\n\r\n            setTimes([]);\r\n            setErrors([]);\r\n        } catch (error) {\r\n            console.error('Error saving times:', error);\r\n            setErrors(['An error occurred while saving times.']);\r\n        }\r\n    };\r\n\r\n    const handleSaveTemplate = async () => {\r\n        if (templateName && times.length) {\r\n            const invalidTimes = times.filter(time => !isValidDate(time.date) || !isValidTime(time.time));\r\n\r\n            if (invalidTimes.length > 0) {\r\n                setErrors(['Some time entries are invalid and will not be saved.']);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const newTemplate = { name: templateName, times: JSON.stringify(times) };\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .insert([newTemplate]);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setTemplateName('');\r\n                setTimes([]);\r\n                setErrors([]);\r\n            } catch (error) {\r\n                console.error('Error saving template:', error);\r\n            }\r\n        } else {\r\n            alert('Template name or times cannot be empty');\r\n        }\r\n    };\r\n\r\n    const handleSelectTemplate = async (e) => {\r\n        const selected = e.target.value;\r\n        setSelectedTemplate(selected);\r\n\r\n        if (selected) {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('times')\r\n                    .eq('name', selected)\r\n                    .single();\r\n\r\n                if (error) throw error;\r\n\r\n                const template = data;\r\n                if (template) {\r\n                    setTimes(JSON.parse(template.times));\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching template:', error);\r\n            }\r\n        } else {\r\n            setTimes([]);\r\n        }\r\n    };\r\n\r\n    const handleDeleteTemplate = async () => {\r\n        if (templateToDelete) {\r\n            try {\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .delete()\r\n                    .eq('name', templateToDelete);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setShowConfirmation(false);\r\n                setTemplateToDelete(null);\r\n            } catch (error) {\r\n                console.error('Error deleting template:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        handleDeleteTemplate();\r\n    };\r\n\r\n    const handleActionClick = (templateName) => {\r\n        setMenuTemplate(templateName);\r\n        setShowConfirmation(false);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        if (action === 'Delete') {\r\n            setTemplateToDelete(menuTemplate);\r\n            setShowConfirmation(true);\r\n        } else if (action === 'Use') {\r\n            const template = templates.find((t) => t.name === menuTemplate);\r\n            if (template) {\r\n                setTimes(JSON.parse(template.times));\r\n            }\r\n            setMenuTemplate(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"times-form\">\r\n            <div className=\"left-side\">\r\n                <div className=\"form-group\">\r\n                    <h4 className=\"label\">Add Times</h4>\r\n                    <input\r\n                        type=\"time\"\r\n                        value={timeInput}\r\n                        onChange={(e) => setTimeInput(e.target.value)}\r\n                        placeholder=\"Enter time\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleAddTime}>Add Time</button>\r\n                </div>\r\n\r\n                {errors.length > 0 && (\r\n                    <div className=\"errors\">\r\n                        {errors.map((error, index) => (\r\n                            <div key={index} className=\"error-message\">{error}</div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Times to be saved</h4>\r\n                    <ul className=\"list\">\r\n                        {times.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatTime(time.time)}\r\n                                <span className=\"delete-icon\" onClick={() => setTimes(times.filter((_, i) => i !== index))}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"save-button\" onClick={handleSave}>Save Times</button>\r\n                </div>\r\n                \r\n                <div>\r\n                    <h4 className=\"label\">Active Times in Calendar</h4>\r\n                    <ul className=\"list\">\r\n                        {availableTimes.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatTime(time.time)}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Save Template</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={templateName}\r\n                        onChange={(e) => setTemplateName(e.target.value)}\r\n                        placeholder=\"Enter template name\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"save-template-button\" onClick={handleSaveTemplate}>Save Template</button>\r\n                </div>\r\n\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Load Template</h4>\r\n                    <select value={selectedTemplate} onChange={handleSelectTemplate} className=\"input\">\r\n                        <option value=\"\">Select Template</option>\r\n                        {templates.map((template) => (\r\n                            <option key={template.id} value={template.name}>\r\n                                {template.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {showConfirmation && (\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Are you sure you want to delete this template?</p>\r\n                        <button onClick={handleConfirmDelete}>Yes</button>\r\n                        <button onClick={() => setShowConfirmation(false)}>No</button>\r\n                    </div>\r\n                )}\r\n\r\n                {menuTemplate && (\r\n                    <div className=\"menu\" ref={menuRef}>\r\n                        <button onClick={() => handleMenuAction('Use')}>Use</button>\r\n                        <button onClick={() => handleMenuAction('Delete')}>Delete</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableTimesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}