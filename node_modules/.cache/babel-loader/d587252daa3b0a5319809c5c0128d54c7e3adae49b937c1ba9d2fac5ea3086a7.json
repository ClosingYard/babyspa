{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\src\\\\components\\\\AvailableTimesForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport supabase from '../supabaseClient';\nimport './AvailableTimesForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isValidTime = time => {\n  const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\n  return timeRegex.test(time);\n};\nconst formatTime = time => {\n  return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nconst AvailableTimesForm = ({\n  onSaveTimes,\n  availableTimes,\n  selectedDate\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  const [timeInput, setTimeInput] = useState('');\n  const [templates, setTemplates] = useState([]);\n  const [templateName, setTemplateName] = useState('');\n  const [menuTemplate, setMenuTemplate] = useState(null);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [templateToDelete, setTemplateToDelete] = useState(null);\n  const [errors, setErrors] = useState([]);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    const fetchTemplates = async () => {\n      try {\n        const {\n          data,\n          error\n        } = await supabase.from('time-templates').select('*');\n        if (error) throw error;\n        setTemplates(data || []);\n      } catch (error) {\n        console.error('Error fetching templates:', error);\n      }\n    };\n    fetchTemplates();\n  }, []);\n  useEffect(() => {\n    // Close the menu if clicked outside\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setMenuTemplate(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleAddTime = () => {\n    if (isValidTime(timeInput)) {\n      setTimes([...times, timeInput]);\n      setTimeInput('');\n    } else {\n      setErrors(['Invalid time format.']);\n    }\n  };\n  const handleSave = async () => {\n    if (times.length === 0) {\n      alert('No times to save.');\n      return;\n    }\n    try {\n      const formattedTimes = times.map(time => ({\n        date: selectedDate.toISOString().split('T')[0],\n        // Save the selected date with time\n        time: time\n      }));\n      const {\n        data,\n        error\n      } = await supabase.from('available_times').upsert(formattedTimes, {\n        returning: 'representation'\n      });\n      if (error) throw error;\n      setTimes([]);\n      setErrors([]);\n    } catch (error) {\n      console.error('Error saving times:', error);\n      setErrors(['An error occurred while saving times.']);\n    }\n  };\n  const handleSaveTemplate = async () => {\n    if (templateName && times.length) {\n      const templateTimes = times.map(time => ({\n        time: time\n      }));\n      try {\n        const newTemplate = {\n          name: templateName,\n          times: JSON.stringify(templateTimes)\n        };\n        const {\n          error\n        } = await supabase.from('time-templates').insert([newTemplate]);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setTemplateName('');\n        setTimes([]);\n        setErrors([]);\n      } catch (error) {\n        console.error('Error saving template:', error);\n      }\n    } else {\n      alert('Template name or times cannot be empty');\n    }\n  };\n  const handleSelectTemplate = template => {\n    const templateTimes = JSON.parse(template.times);\n    const appliedTimes = templateTimes.map(time => ({\n      date: selectedDate.toISOString().split('T')[0],\n      time: time.time\n    }));\n\n    // Add or update times for the selected date\n    setTimes(appliedTimes);\n    setMenuTemplate(null);\n  };\n  const handleDeleteTemplate = async () => {\n    if (templateToDelete) {\n      try {\n        const {\n          error\n        } = await supabase.from('time-templates').delete().eq('name', templateToDelete);\n        if (error) throw error;\n        const {\n          data,\n          error: fetchError\n        } = await supabase.from('time-templates').select('*');\n        if (fetchError) throw fetchError;\n        setTemplates(data || []);\n        setShowConfirmation(false);\n        setTemplateToDelete(null);\n      } catch (error) {\n        console.error('Error deleting template:', error);\n      }\n    }\n  };\n  const handleConfirmDelete = () => {\n    handleDeleteTemplate();\n  };\n  const handleActionClick = template => {\n    setMenuTemplate(template);\n    setShowConfirmation(false);\n  };\n  const handleMenuAction = action => {\n    if (action === 'Delete') {\n      setTemplateToDelete(menuTemplate.name);\n      setShowConfirmation(true);\n    } else if (action === 'Use') {\n      handleSelectTemplate(menuTemplate);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"times-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Add Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: timeInput,\n          onChange: e => setTimeInput(e.target.value),\n          placeholder: \"Enter time\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddTime,\n          children: \"Add Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errors\",\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Times to be saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [formatTime(time), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"delete-icon\",\n              onClick: () => setTimes(times.filter((_, i) => i !== index)),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Create Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: templateName,\n          onChange: e => setTemplateName(e.target.value),\n          placeholder: \"Template Name\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSaveTemplate,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"template-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"label\",\n          children: \"Manage Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"template-list\",\n          children: templates.map(template => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"template-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: template.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleActionClick(template),\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, template.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this template?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmDelete,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowConfirmation(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), menuTemplate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-popup\",\n        ref: menuRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Use'),\n          children: \"Use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMenuAction('Delete'),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableTimesForm, \"ScvZK/VYXGj97anwqHVjkkF3rSA=\");\n_c = AvailableTimesForm;\nexport default AvailableTimesForm;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","jsxDEV","_jsxDEV","isValidTime","time","timeRegex","test","formatTime","Date","toLocaleTimeString","hour","minute","AvailableTimesForm","onSaveTimes","availableTimes","selectedDate","_s","times","setTimes","timeInput","setTimeInput","templates","setTemplates","templateName","setTemplateName","menuTemplate","setMenuTemplate","showConfirmation","setShowConfirmation","templateToDelete","setTemplateToDelete","errors","setErrors","menuRef","fetchTemplates","data","error","from","select","console","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTime","handleSave","length","alert","formattedTimes","map","date","toISOString","split","upsert","returning","handleSaveTemplate","templateTimes","newTemplate","name","JSON","stringify","insert","fetchError","handleSelectTemplate","template","parse","appliedTimes","handleDeleteTemplate","delete","eq","handleConfirmDelete","handleActionClick","handleMenuAction","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","placeholder","onClick","index","filter","_","i","id","ref","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/src/components/AvailableTimesForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport supabase from '../supabaseClient';\r\nimport './AvailableTimesForm.css';\r\n\r\nconst isValidTime = (time) => {\r\n    const timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\r\n    return timeRegex.test(time);\r\n};\r\n\r\nconst formatTime = (time) => {\r\n    return new Date(`1970-01-01T${time}:00`).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n};\r\n\r\nconst AvailableTimesForm = ({ onSaveTimes, availableTimes, selectedDate }) => {\r\n    const [times, setTimes] = useState([]);\r\n    const [timeInput, setTimeInput] = useState('');\r\n    const [templates, setTemplates] = useState([]);\r\n    const [templateName, setTemplateName] = useState('');\r\n    const [menuTemplate, setMenuTemplate] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [templateToDelete, setTemplateToDelete] = useState(null);\r\n    const [errors, setErrors] = useState([]);\r\n    const menuRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchTemplates = async () => {\r\n            try {\r\n                const { data, error } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (error) throw error;\r\n\r\n                setTemplates(data || []);\r\n            } catch (error) {\r\n                console.error('Error fetching templates:', error);\r\n            }\r\n        };\r\n\r\n        fetchTemplates();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Close the menu if clicked outside\r\n        const handleClickOutside = (event) => {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuTemplate(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }, []);\r\n\r\n    const handleAddTime = () => {\r\n        if (isValidTime(timeInput)) {\r\n            setTimes([...times, timeInput]);\r\n            setTimeInput('');\r\n        } else {\r\n            setErrors(['Invalid time format.']);\r\n        }\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        if (times.length === 0) {\r\n            alert('No times to save.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const formattedTimes = times.map(time => ({\r\n                date: selectedDate.toISOString().split('T')[0], // Save the selected date with time\r\n                time: time\r\n            }));\r\n\r\n            const { data, error } = await supabase\r\n                .from('available_times')\r\n                .upsert(formattedTimes, { returning: 'representation' });\r\n\r\n            if (error) throw error;\r\n\r\n            setTimes([]);\r\n            setErrors([]);\r\n        } catch (error) {\r\n            console.error('Error saving times:', error);\r\n            setErrors(['An error occurred while saving times.']);\r\n        }\r\n    };\r\n\r\n    const handleSaveTemplate = async () => {\r\n        if (templateName && times.length) {\r\n            const templateTimes = times.map(time => ({ time: time }));\r\n\r\n            try {\r\n                const newTemplate = { name: templateName, times: JSON.stringify(templateTimes) };\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .insert([newTemplate]);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setTemplateName('');\r\n                setTimes([]);\r\n                setErrors([]);\r\n            } catch (error) {\r\n                console.error('Error saving template:', error);\r\n            }\r\n        } else {\r\n            alert('Template name or times cannot be empty');\r\n        }\r\n    };\r\n\r\n    const handleSelectTemplate = (template) => {\r\n        const templateTimes = JSON.parse(template.times);\r\n        const appliedTimes = templateTimes.map(time => ({ date: selectedDate.toISOString().split('T')[0], time: time.time }));\r\n        \r\n        // Add or update times for the selected date\r\n        setTimes(appliedTimes);\r\n        setMenuTemplate(null);\r\n    };\r\n\r\n    const handleDeleteTemplate = async () => {\r\n        if (templateToDelete) {\r\n            try {\r\n                const { error } = await supabase\r\n                    .from('time-templates')\r\n                    .delete()\r\n                    .eq('name', templateToDelete);\r\n\r\n                if (error) throw error;\r\n\r\n                const { data, error: fetchError } = await supabase\r\n                    .from('time-templates')\r\n                    .select('*');\r\n\r\n                if (fetchError) throw fetchError;\r\n\r\n                setTemplates(data || []);\r\n                setShowConfirmation(false);\r\n                setTemplateToDelete(null);\r\n            } catch (error) {\r\n                console.error('Error deleting template:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        handleDeleteTemplate();\r\n    };\r\n\r\n    const handleActionClick = (template) => {\r\n        setMenuTemplate(template);\r\n        setShowConfirmation(false);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        if (action === 'Delete') {\r\n            setTemplateToDelete(menuTemplate.name);\r\n            setShowConfirmation(true);\r\n        } else if (action === 'Use') {\r\n            handleSelectTemplate(menuTemplate);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"times-form\">\r\n            <div className=\"left-side\">\r\n                <div className=\"form-group\">\r\n                    <h4 className=\"label\">Add Times</h4>\r\n                    <input\r\n                        type=\"time\"\r\n                        value={timeInput}\r\n                        onChange={(e) => setTimeInput(e.target.value)}\r\n                        placeholder=\"Enter time\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"add-button\" onClick={handleAddTime}>Add Time</button>\r\n                </div>\r\n\r\n                {errors.length > 0 && (\r\n                    <div className=\"errors\">\r\n                        {errors.map((error, index) => (\r\n                            <div key={index} className=\"error-message\">{error}</div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                <div>\r\n                    <h4 className=\"label\">Times to be saved</h4>\r\n                    <ul className=\"list\">\r\n                        {times.map((time, index) => (\r\n                            <li key={index} className=\"list-item\">\r\n                                {formatTime(time)}\r\n                                <span className=\"delete-icon\" onClick={() => setTimes(times.filter((_, i) => i !== index))}>×</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"save-button\" onClick={handleSave}>Save Times</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"right-side\">\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Create Template</h4>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={templateName}\r\n                        onChange={(e) => setTemplateName(e.target.value)}\r\n                        placeholder=\"Template Name\"\r\n                        className=\"input\"\r\n                    />\r\n                    <button className=\"save-button\" onClick={handleSaveTemplate}>Save Template</button>\r\n                </div>\r\n\r\n                <div className=\"template-section\">\r\n                    <h4 className=\"label\">Manage Templates</h4>\r\n                    <ul className=\"template-list\">\r\n                        {templates.map((template) => (\r\n                            <li key={template.id} className=\"template-item\">\r\n                                <span>{template.name}</span>\r\n                                <div className=\"actions\">\r\n                                    <button onClick={() => handleActionClick(template)}>Actions</button>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n\r\n                {showConfirmation && (\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Are you sure you want to delete this template?</p>\r\n                        <button onClick={handleConfirmDelete}>Yes</button>\r\n                        <button onClick={() => setShowConfirmation(false)}>No</button>\r\n                    </div>\r\n                )}\r\n\r\n                {menuTemplate && (\r\n                    <div className=\"menu-popup\" ref={menuRef}>\r\n                        <button onClick={() => handleMenuAction('Use')}>Use</button>\r\n                        <button onClick={() => handleMenuAction('Delete')}>Delete</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableTimesForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}