{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarno\\\\Desktop\\\\Spa-Website\\\\babyspa\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/pages/Login.js\nimport React, { useState } from 'react';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setUser\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(''); // Clear previous errors\n\n    try {\n      // Sign in with Supabase Auth\n      const {\n        data: {\n          user,\n          session\n        },\n        error: authError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (authError) {\n        throw authError;\n      }\n\n      // Fetch user profile from 'profiles' table\n      const {\n        data: profile,\n        error: profileError\n      } = await supabase.from('profiles').select('*').eq('email', email).single();\n      if (profileError) {\n        throw profileError;\n      }\n\n      // Set user with profile data\n      const userWithProfile = {\n        ...user,\n        ...profile\n      };\n      localStorage.setItem('token', session.access_token); // Store the token if needed\n      console.log('Logged in user:', userWithProfile); // Log user object\n      setUser(userWithProfile); // Ensure user object includes relevant details\n    } catch (err) {\n      console.log('Failed to login:', err.message);\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","Login","setUser","_s","email","setEmail","password","setPassword","error","setError","handleLogin","e","preventDefault","data","user","session","authError","auth","signInWithPassword","profile","profileError","from","select","eq","single","userWithProfile","localStorage","setItem","access_token","console","log","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/jarno/Desktop/Spa-Website/babyspa/client/src/pages/Login.js"],"sourcesContent":["// src/pages/Login.js\r\nimport React, { useState } from 'react';\r\nimport supabase from '../supabaseClient';\r\n\r\nfunction Login({ setUser }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear previous errors\r\n\r\n        try {\r\n            // Sign in with Supabase Auth\r\n            const { data: { user, session }, error: authError } = await supabase.auth.signInWithPassword({\r\n                email,\r\n                password,\r\n            });\r\n\r\n            if (authError) {\r\n                throw authError;\r\n            }\r\n\r\n            // Fetch user profile from 'profiles' table\r\n            const { data: profile, error: profileError } = await supabase\r\n                .from('profiles')\r\n                .select('*')\r\n                .eq('email', email)\r\n                .single();\r\n\r\n            if (profileError) {\r\n                throw profileError;\r\n            }\r\n\r\n            // Set user with profile data\r\n            const userWithProfile = { ...user, ...profile };\r\n            localStorage.setItem('token', session.access_token); // Store the token if needed\r\n            console.log('Logged in user:', userWithProfile); // Log user object\r\n            setUser(userWithProfile); // Ensure user object includes relevant details\r\n\r\n        } catch (err) {\r\n            console.log('Failed to login:', err.message);\r\n            setError('Invalid email or password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleLogin}>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Login</button>\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}